"function" !== typeof Object.create && (Object.create = function(f) {
  function g() {}
  g.prototype = f;
  return new g
});
(function(f, g, k) {
  var l = {
    init: function(a, b) {
      this.$elem = f(b);
      this.options = f.extend({}, f.fn.owlCarousel.options, this.$elem.data(), a);
      this.userOptions = a;
      this.loadContent()
    },
    loadContent: function() {
      function a(a) {
        var d, e = "";
        if ("function" === typeof b.options.jsonSuccess) b.options.jsonSuccess.apply(this, [a]);
        else {
          for (d in a.owl) a.owl.hasOwnProperty(d) && (e += a.owl[d].item);
          b.$elem.html(e)
        }
        b.logIn()
      }
      var b = this,
        e;
      "function" === typeof b.options.beforeInit && b.options.beforeInit.apply(this, [b.$elem]);
      "string" === typeof b.options.jsonPath ? (e = b.options.jsonPath, f.getJSON(e, a)) : b.logIn()
    },
    logIn: function() {
      this.$elem.data("owl-originalStyles", this.$elem.attr("style"));
      this.$elem.data("owl-originalClasses", this.$elem.attr("class"));
      this.$elem.css({
        opacity: 0
      });
      this.orignalItems = this.options.items;
      this.checkBrowser();
      this.wrapperWidth = 0;
      this.checkVisible = null;
      this.setVars()
    },
    setVars: function() {
      if (0 === this.$elem.children().length) return !1;
      this.baseClass();
      this.eventTypes();
      this.$userItems = this.$elem.children();
      this.itemsAmount = this.$userItems.length;
      this.wrapItems();
      this.$owlItems = this.$elem.find(".owl-item");
      this.$owlWrapper = this.$elem.find(".owl-wrapper");
      this.playDirection = "next";
      this.prevItem = 0;
      this.prevArr = [0];
      this.currentItem = 0;
      this.customEvents();
      this.onStartup()
    },
    onStartup: function() {
      this.updateItems();
      this.calculateAll();
      this.buildControls();
      this.updateControls();
      this.response();
      this.moveEvents();
      this.stopOnHover();
      this.owlStatus();
      !1 !== this.options.transitionStyle && this.transitionTypes(this.options.transitionStyle);
      !0 === this.options.autoPlay && (this.options.autoPlay = 5E3);
      this.play();
      this.$elem.find(".owl-wrapper").css("display", "block");
      this.$elem.is(":visible") ? this.$elem.css("opacity", 1) : this.watchVisibility();
      this.onstartup = !1;
      this.eachMoveUpdate();
      "function" === typeof this.options.afterInit && this.options.afterInit.apply(this, [this.$elem])
    },
    eachMoveUpdate: function() {
      !0 === this.options.lazyLoad && this.lazyLoad();
      !0 === this.options.autoHeight && this.autoHeight();
      this.onVisibleItems();
      "function" === typeof this.options.afterAction && this.options.afterAction.apply(this, [this.$elem])
    },
    updateVars: function() {
      "function" === typeof this.options.beforeUpdate && this.options.beforeUpdate.apply(this, [this.$elem]);
      this.watchVisibility();
      this.updateItems();
      this.calculateAll();
      this.updatePosition();
      this.updateControls();
      this.eachMoveUpdate();
      "function" === typeof this.options.afterUpdate && this.options.afterUpdate.apply(this, [this.$elem])
    },
    reload: function() {
      var a = this;
      g.setTimeout(function() {
        a.updateVars()
      }, 0)
    },
    watchVisibility: function() {
      var a = this;
      if (!1 === a.$elem.is(":visible")) a.$elem.css({
        opacity: 0
      }), g.clearInterval(a.autoPlayInterval), g.clearInterval(a.checkVisible);
      else return !1;
      a.checkVisible = g.setInterval(function() {
        a.$elem.is(":visible") && (a.reload(), a.$elem.animate({
          opacity: 1
        }, 200), g.clearInterval(a.checkVisible))
      }, 500)
    },
    wrapItems: function() {
      this.$userItems.wrapAll('<div class="owl-wrapper">').wrap('<div class="owl-item"></div>');
      this.$elem.find(".owl-wrapper").wrap('<div class="owl-wrapper-outer">');
      this.wrapperOuter = this.$elem.find(".owl-wrapper-outer");
      this.$elem.css("display", "block")
    },
    baseClass: function() {
      var a = this.$elem.hasClass(this.options.baseClass),
        b = this.$elem.hasClass(this.options.theme);
      a || this.$elem.addClass(this.options.baseClass);
      b || this.$elem.addClass(this.options.theme)
    },
    updateItems: function() {
      var a, b;
      if (!1 === this.options.responsive) return !1;
      if (!0 === this.options.singleItem) return this.options.items = this.orignalItems = 1, this.options.itemsCustom = !1, this.options.itemsDesktop = !1, this.options.itemsDesktopSmall = !1, this.options.itemsTablet = !1, this.options.itemsTabletSmall = !1, this.options.itemsMobile = !1;
      a = f(this.options.responsiveBaseWidth).width();
      a > (this.options.itemsDesktop[0] || this.orignalItems) && (this.options.items = this.orignalItems);
      if (!1 !== this.options.itemsCustom)
        for (this.options.itemsCustom.sort(function(a, b) {
            return a[0] - b[0]
          }), b = 0; b < this.options.itemsCustom.length; b += 1) this.options.itemsCustom[b][0] <= a && (this.options.items = this.options.itemsCustom[b][1]);
      else a <= this.options.itemsDesktop[0] && !1 !== this.options.itemsDesktop && (this.options.items = this.options.itemsDesktop[1]), a <= this.options.itemsDesktopSmall[0] && !1 !== this.options.itemsDesktopSmall && (this.options.items = this.options.itemsDesktopSmall[1]), a <= this.options.itemsTablet[0] && !1 !== this.options.itemsTablet && (this.options.items = this.options.itemsTablet[1]), a <= this.options.itemsTabletSmall[0] && !1 !== this.options.itemsTabletSmall && (this.options.items = this.options.itemsTabletSmall[1]), a <= this.options.itemsMobile[0] && !1 !== this.options.itemsMobile && (this.options.items = this.options.itemsMobile[1]);
      this.options.items > this.itemsAmount && !0 === this.options.itemsScaleUp && (this.options.items = this.itemsAmount)
    },
    response: function() {
      var a = this,
        b, e;
      if (!0 !== a.options.responsive) return !1;
      e = f(g).width();
      a.resizer = function() {
        f(g).width() !== e && (!1 !== a.options.autoPlay && g.clearInterval(a.autoPlayInterval), g.clearTimeout(b), b = g.setTimeout(function() {
          e = f(g).width();
          a.updateVars()
        }, a.options.responsiveRefreshRate))
      };
      f(g).resize(a.resizer)
    },
    updatePosition: function() {
      this.jumpTo(this.currentItem);
      !1 !== this.options.autoPlay && this.checkAp()
    },
    appendItemsSizes: function() {
      var a = this,
        b = 0,
        e = a.itemsAmount - a.options.items;
      a.$owlItems.each(function(c) {
        var d = f(this);
        d.css({
          width: a.itemWidth
        }).data("owl-item", Number(c));
        if (0 === c % a.options.items || c === e) c > e || (b += 1);
        d.data("owl-roundPages", b)
      })
    },
    appendWrapperSizes: function() {
      this.$owlWrapper.css({
        width: this.$owlItems.length * this.itemWidth * 2,
        left: 0
      });
      this.appendItemsSizes()
    },
    calculateAll: function() {
      this.calculateWidth();
      this.appendWrapperSizes();
      this.loops();
      this.max()
    },
    calculateWidth: function() {
      this.itemWidth = Math.round(this.$elem.width() / this.options.items)
    },
    max: function() {
      var a = -1 * (this.itemsAmount * this.itemWidth - this.options.items * this.itemWidth);
      this.options.items > this.itemsAmount ? this.maximumPixels = a = this.maximumItem = 0 : (this.maximumItem = this.itemsAmount - this.options.items, this.maximumPixels = a);
      return a
    },
    min: function() {
      return 0
    },
    loops: function() {
      var a = 0,
        b = 0,
        e, c;
      this.positionsInArray = [0];
      this.pagesInArray = [];
      for (e = 0; e < this.itemsAmount; e += 1) b += this.itemWidth, this.positionsInArray.push(-b), !0 === this.options.scrollPerPage && (c = f(this.$owlItems[e]), c = c.data("owl-roundPages"), c !== a && (this.pagesInArray[a] = this.positionsInArray[e], a = c))
    },
    buildControls: function() {
      if (!0 === this.options.navigation || !0 === this.options.pagination) this.owlControls = f('<div class="owl-controls"/>').toggleClass("clickable", !this.browser.isTouch).appendTo(this.$elem);
      !0 === this.options.pagination && this.buildPagination();
      !0 === this.options.navigation && this.buildButtons()
    },
    buildButtons: function() {
      var a = this,
        b = f('<div class="owl-buttons"/>');
      a.owlControls.append(b);
      a.buttonPrev = f("<div/>", {
        "class": "owl-prev",
        html: a.options.navigationText[0] || ""
      });
      a.buttonNext = f("<div/>", {
        "class": "owl-next",
        html: a.options.navigationText[1] || ""
      });
      b.append(a.buttonPrev).append(a.buttonNext);
      b.on("touchstart.owlControls mousedown.owlControls", 'div[class^="owl"]', function(a) {
        a.preventDefault()
      });
      b.on("touchend.owlControls mouseup.owlControls", 'div[class^="owl"]', function(b) {
        b.preventDefault();
        f(this).hasClass("owl-next") ? a.next() : a.prev()
      })
    },
    buildPagination: function() {
      var a = this;
      a.paginationWrapper = f('<div class="owl-pagination"/>');
      a.owlControls.append(a.paginationWrapper);
      a.paginationWrapper.on("touchend.owlControls mouseup.owlControls", ".owl-page", function(b) {
        b.preventDefault();
        Number(f(this).data("owl-page")) !== a.currentItem && a.goTo(Number(f(this).data("owl-page")), !0)
      })
    },
    updatePagination: function() {
      var a, b, e, c, d, g;
      if (!1 === this.options.pagination) return !1;
      this.paginationWrapper.html("");
      a = 0;
      b = this.itemsAmount - this.itemsAmount % this.options.items;
      for (c = 0; c < this.itemsAmount; c += 1) 0 === c % this.options.items && (a += 1, b === c && (e = this.itemsAmount - this.options.items), d = f("<div/>", {
        "class": "owl-page"
      }), g = f("<span></span>", {
        text: !0 === this.options.paginationNumbers ? a : "",
        "class": !0 === this.options.paginationNumbers ? "owl-numbers" : ""
      }), d.append(g), d.data("owl-page", b === c ? e : c), d.data("owl-roundPages", a), this.paginationWrapper.append(d));
      this.checkPagination()
    },
    checkPagination: function() {
      var a = this;
      if (!1 === a.options.pagination) return !1;
      a.paginationWrapper.find(".owl-page").each(function() {
        f(this).data("owl-roundPages") === f(a.$owlItems[a.currentItem]).data("owl-roundPages") && (a.paginationWrapper.find(".owl-page").removeClass("active"), f(this).addClass("active"))
      })
    },
    checkNavigation: function() {
      if (!1 === this.options.navigation) return !1;
      !1 === this.options.rewindNav && (0 === this.currentItem && 0 === this.maximumItem ? (this.buttonPrev.addClass("disabled"), this.buttonNext.addClass("disabled")) : 0 === this.currentItem && 0 !== this.maximumItem ? (this.buttonPrev.addClass("disabled"), this.buttonNext.removeClass("disabled")) : this.currentItem === this.maximumItem ? (this.buttonPrev.removeClass("disabled"), this.buttonNext.addClass("disabled")) : 0 !== this.currentItem && this.currentItem !== this.maximumItem && (this.buttonPrev.removeClass("disabled"), this.buttonNext.removeClass("disabled")))
    },
    updateControls: function() {
      this.updatePagination();
      this.checkNavigation();
      this.owlControls && (this.options.items >= this.itemsAmount ? this.owlControls.hide() : this.owlControls.show())
    },
    destroyControls: function() {
      this.owlControls && this.owlControls.remove()
    },
    next: function(a) {
      if (this.isTransition) return !1;
      this.currentItem += !0 === this.options.scrollPerPage ? this.options.items : 1;
      if (this.currentItem > this.maximumItem + (!0 === this.options.scrollPerPage ? this.options.items - 1 : 0))
        if (!0 === this.options.rewindNav) this.currentItem = 0, a = "rewind";
        else return this.currentItem = this.maximumItem, !1;
      this.goTo(this.currentItem, a)
    },
    prev: function(a) {
      if (this.isTransition) return !1;
      this.currentItem = !0 === this.options.scrollPerPage && 0 < this.currentItem && this.currentItem < this.options.items ? 0 : this.currentItem - (!0 === this.options.scrollPerPage ? this.options.items : 1);
      if (0 > this.currentItem)
        if (!0 === this.options.rewindNav) this.currentItem = this.maximumItem, a = "rewind";
        else return this.currentItem = 0, !1;
      this.goTo(this.currentItem, a)
    },
    goTo: function(a, b, e) {
      var c = this;
      if (c.isTransition) return !1;
      "function" === typeof c.options.beforeMove && c.options.beforeMove.apply(this, [c.$elem]);
      a >= c.maximumItem ? a = c.maximumItem : 0 >= a && (a = 0);
      c.currentItem = c.owl.currentItem = a;
      if (!1 !== c.options.transitionStyle && "drag" !== e && 1 === c.options.items && !0 === c.browser.support3d) return c.swapSpeed(0), !0 === c.browser.support3d ? c.transition3d(c.positionsInArray[a]) : c.css2slide(c.positionsInArray[a], 1), c.afterGo(), c.singleItemTransition(), !1;
      a = c.positionsInArray[a];
      !0 === c.browser.support3d ? (c.isCss3Finish = !1, !0 === b ? (c.swapSpeed("paginationSpeed"), g.setTimeout(function() {
        c.isCss3Finish = !0
      }, c.options.paginationSpeed)) : "rewind" === b ? (c.swapSpeed(c.options.rewindSpeed), g.setTimeout(function() {
        c.isCss3Finish = !0
      }, c.options.rewindSpeed)) : (c.swapSpeed("slideSpeed"), g.setTimeout(function() {
        c.isCss3Finish = !0
      }, c.options.slideSpeed)), c.transition3d(a)) : !0 === b ? c.css2slide(a, c.options.paginationSpeed) : "rewind" === b ? c.css2slide(a, c.options.rewindSpeed) : c.css2slide(a, c.options.slideSpeed);
      c.afterGo()
    },
    jumpTo: function(a) {
      "function" === typeof this.options.beforeMove && this.options.beforeMove.apply(this, [this.$elem]);
      a >= this.maximumItem || -1 === a ? a = this.maximumItem : 0 >= a && (a = 0);
      this.swapSpeed(0);
      !0 === this.browser.support3d ? this.transition3d(this.positionsInArray[a]) : this.css2slide(this.positionsInArray[a], 1);
      this.currentItem = this.owl.currentItem = a;
      this.afterGo()
    },
    afterGo: function() {
      this.prevArr.push(this.currentItem);
      this.prevItem = this.owl.prevItem = this.prevArr[this.prevArr.length - 2];
      this.prevArr.shift(0);
      this.prevItem !== this.currentItem && (this.checkPagination(), this.checkNavigation(), this.eachMoveUpdate(), !1 !== this.options.autoPlay && this.checkAp());
      "function" === typeof this.options.afterMove && this.prevItem !== this.currentItem && this.options.afterMove.apply(this, [this.$elem])
    },
    stop: function() {
      this.apStatus = "stop";
      g.clearInterval(this.autoPlayInterval)
    },
    checkAp: function() {
      "stop" !== this.apStatus && this.play()
    },
    play: function() {
      var a = this;
      a.apStatus = "play";
      if (!1 === a.options.autoPlay) return !1;
      g.clearInterval(a.autoPlayInterval);
      a.autoPlayInterval = g.setInterval(function() {
        a.next(!0)
      }, a.options.autoPlay)
    },
    swapSpeed: function(a) {
      "slideSpeed" === a ? this.$owlWrapper.css(this.addCssSpeed(this.options.slideSpeed)) : "paginationSpeed" === a ? this.$owlWrapper.css(this.addCssSpeed(this.options.paginationSpeed)) : "string" !== typeof a && this.$owlWrapper.css(this.addCssSpeed(a))
    },
    addCssSpeed: function(a) {
      return {
        "-webkit-transition": "all " + a + "ms ease",
        "-moz-transition": "all " + a + "ms ease",
        "-o-transition": "all " + a + "ms ease",
        transition: "all " + a + "ms ease"
      }
    },
    removeTransition: function() {
      return {
        "-webkit-transition": "",
        "-moz-transition": "",
        "-o-transition": "",
        transition: ""
      }
    },
    doTranslate: function(a) {
      return {
        "-webkit-transform": "translate3d(" + a + "px, 0px, 0px)",
        "-moz-transform": "translate3d(" + a + "px, 0px, 0px)",
        "-o-transform": "translate3d(" + a + "px, 0px, 0px)",
        "-ms-transform": "translate3d(" +
          a + "px, 0px, 0px)",
        transform: "translate3d(" + a + "px, 0px,0px)"
      }
    },
    transition3d: function(a) {
      this.$owlWrapper.css(this.doTranslate(a))
    },
    css2move: function(a) {
      this.$owlWrapper.css({
        left: a
      })
    },
    css2slide: function(a, b) {
      var e = this;
      e.isCssFinish = !1;
      e.$owlWrapper.stop(!0, !0).animate({
        left: a
      }, {
        duration: b || e.options.slideSpeed,
        complete: function() {
          e.isCssFinish = !0
        }
      })
    },
    checkBrowser: function() {
      var a = k.createElement("div");
      a.style.cssText = "  -moz-transform:translate3d(0px, 0px, 0px); -ms-transform:translate3d(0px, 0px, 0px); -o-transform:translate3d(0px, 0px, 0px); -webkit-transform:translate3d(0px, 0px, 0px); transform:translate3d(0px, 0px, 0px)";
      a = a.style.cssText.match(/translate3d\(0px, 0px, 0px\)/g);
      this.browser = {
        support3d: null !== a && 1 === a.length,
        isTouch: "ontouchstart" in g || g.navigator.msMaxTouchPoints
      }
    },
    moveEvents: function() {
      if (!1 !== this.options.mouseDrag || !1 !== this.options.touchDrag) this.gestures(), this.disabledEvents()
    },
    eventTypes: function() {
      var a = ["s", "e", "x"];
      this.ev_types = {};
      !0 === this.options.mouseDrag && !0 === this.options.touchDrag ? a = ["touchstart.owl mousedown.owl", "touchmove.owl mousemove.owl", "touchend.owl touchcancel.owl mouseup.owl"] : !1 === this.options.mouseDrag && !0 === this.options.touchDrag ? a = ["touchstart.owl", "touchmove.owl", "touchend.owl touchcancel.owl"] : !0 === this.options.mouseDrag && !1 === this.options.touchDrag && (a = ["mousedown.owl", "mousemove.owl", "mouseup.owl"]);
      this.ev_types.start = a[0];
      this.ev_types.move = a[1];
      this.ev_types.end = a[2]
    },
    disabledEvents: function() {
      this.$elem.on("dragstart.owl", function(a) {
        a.preventDefault()
      });
      this.$elem.on("mousedown.disableTextSelect", function(a) {
        return f(a.target).is("input, textarea, select, option")
      })
    },
    gestures: function() {
      function a(a) {
        if (void 0 !== a.touches) return {
          x: a.touches[0].pageX,
          y: a.touches[0].pageY
        };
        if (void 0 === a.touches) {
          if (void 0 !== a.pageX) return {
            x: a.pageX,
            y: a.pageY
          };
          if (void 0 === a.pageX) return {
            x: a.clientX,
            y: a.clientY
          }
        }
      }

      function b(a) {
        "on" === a ? (f(k).on(d.ev_types.move, e), f(k).on(d.ev_types.end, c)) : "off" === a && (f(k).off(d.ev_types.move), f(k).off(d.ev_types.end))
      }

      function e(b) {
        b = b.originalEvent || b || g.event;
        d.newPosX = a(b).x - h.offsetX;
        d.newPosY = a(b).y - h.offsetY;
        d.newRelativeX = d.newPosX - h.relativePos;
        "function" === typeof d.options.startDragging && !0 !== h.dragging && 0 !== d.newRelativeX && (h.dragging = !0, d.options.startDragging.apply(d, [d.$elem]));
        (8 < d.newRelativeX || -8 > d.newRelativeX) && !0 === d.browser.isTouch && (void 0 !== b.preventDefault ? b.preventDefault() : b.returnValue = !1, h.sliding = !0);
        (10 < d.newPosY || -10 > d.newPosY) && !1 === h.sliding && f(k).off("touchmove.owl");
        d.newPosX = Math.max(Math.min(d.newPosX, d.newRelativeX / 5), d.maximumPixels + d.newRelativeX / 5);
        !0 === d.browser.support3d ? d.transition3d(d.newPosX) : d.css2move(d.newPosX)
      }

      function c(a) {
        a = a.originalEvent || a || g.event;
        var c;
        a.target = a.target || a.srcElement;
        h.dragging = !1;
        !0 !== d.browser.isTouch && d.$owlWrapper.removeClass("grabbing");
        d.dragDirection = 0 > d.newRelativeX ? d.owl.dragDirection = "left" : d.owl.dragDirection = "right";
        0 !== d.newRelativeX && (c = d.getNewPosition(), d.goTo(c, !1, "drag"), h.targetElement === a.target && !0 !== d.browser.isTouch && (f(a.target).on("click.disable", function(a) {
          a.stopImmediatePropagation();
          a.stopPropagation();
          a.preventDefault();
          f(a.target).off("click.disable")
        }), a = f._data(a.target, "events").click, c = a.pop(), a.splice(0, 0, c)));
        b("off")
      }
      var d = this,
        h = {
          offsetX: 0,
          offsetY: 0,
          baseElWidth: 0,
          relativePos: 0,
          position: null,
          minSwipe: null,
          maxSwipe: null,
          sliding: null,
          dargging: null,
          targetElement: null
        };
      d.isCssFinish = !0;
      d.$elem.on(d.ev_types.start, ".owl-wrapper", function(c) {
        c = c.originalEvent || c || g.event;
        var e;
        if (3 === c.which) return !1;
        if (!(d.itemsAmount <= d.options.items)) {
          if (!1 === d.isCssFinish && !d.options.dragBeforeAnimFinish || !1 === d.isCss3Finish && !d.options.dragBeforeAnimFinish) return !1;
          !1 !== d.options.autoPlay && g.clearInterval(d.autoPlayInterval);
          !0 === d.browser.isTouch || d.$owlWrapper.hasClass("grabbing") || d.$owlWrapper.addClass("grabbing");
          d.newPosX = 0;
          d.newRelativeX = 0;
          f(this).css(d.removeTransition());
          e = f(this).position();
          h.relativePos = e.left;
          h.offsetX = a(c).x - e.left;
          h.offsetY = a(c).y - e.top;
          b("on");
          h.sliding = !1;
          h.targetElement = c.target || c.srcElement
        }
      })
    },
    getNewPosition: function() {
      var a = this.closestItem();
      a > this.maximumItem ? a = this.currentItem = this.maximumItem : 0 <= this.newPosX && (this.currentItem = a = 0);
      return a
    },
    closestItem: function() {
      var a = this,
        b = !0 === a.options.scrollPerPage ? a.pagesInArray : a.positionsInArray,
        e = a.newPosX,
        c = null;
      f.each(b, function(d, g) {
        e - a.itemWidth / 20 > b[d + 1] && e - a.itemWidth / 20 < g && "left" === a.moveDirection() ? (c = g, a.currentItem = !0 === a.options.scrollPerPage ? f.inArray(c, a.positionsInArray) : d) : e + a.itemWidth / 20 < g && e + a.itemWidth / 20 > (b[d + 1] || b[d] - a.itemWidth) && "right" === a.moveDirection() && (!0 === a.options.scrollPerPage ? (c = b[d + 1] || b[b.length - 1], a.currentItem = f.inArray(c, a.positionsInArray)) : (c = b[d + 1], a.currentItem = d + 1))
      });
      return a.currentItem
    },
    moveDirection: function() {
      var a;
      0 > this.newRelativeX ? (a = "right", this.playDirection = "next") : (a = "left", this.playDirection = "prev");
      return a
    },
    customEvents: function() {
      var a = this;
      a.$elem.on("owl.next", function() {
        a.next()
      });
      a.$elem.on("owl.prev", function() {
        a.prev()
      });
      a.$elem.on("owl.play", function(b, e) {
        a.options.autoPlay = e;
        a.play();
        a.hoverStatus = "play"
      });
      a.$elem.on("owl.stop", function() {
        a.stop();
        a.hoverStatus = "stop"
      });
      a.$elem.on("owl.goTo", function(b, e) {
        a.goTo(e)
      });
      a.$elem.on("owl.jumpTo", function(b, e) {
        a.jumpTo(e)
      })
    },
    stopOnHover: function() {
      var a = this;
      !0 === a.options.stopOnHover && !0 !== a.browser.isTouch && !1 !== a.options.autoPlay && (a.$elem.on("mouseover", function() {
        a.stop()
      }), a.$elem.on("mouseout", function() {
        "stop" !== a.hoverStatus && a.play()
      }))
    },
    lazyLoad: function() {
      var a, b, e, c, d;
      if (!1 === this.options.lazyLoad) return !1;
      for (a = 0; a < this.itemsAmount; a += 1) b = f(this.$owlItems[a]), "loaded" !== b.data("owl-loaded") && (e = b.data("owl-item"), c = b.find(".lazyOwl"), "string" !== typeof c.data("src") ? b.data("owl-loaded", "loaded") : (void 0 === b.data("owl-loaded") && (c.hide(), b.addClass("loading").data("owl-loaded", "checked")), (d = !0 === this.options.lazyFollow ? e >= this.currentItem : !0) && e < this.currentItem + this.options.items && c.length && this.lazyPreload(b, c)))
    },
    lazyPreload: function(a, b) {
      function e() {
        a.data("owl-loaded", "loaded").removeClass("loading");
        b.removeAttr("data-src");
        "fade" === d.options.lazyEffect ? b.fadeIn(400) : b.show();
        "function" === typeof d.options.afterLazyLoad && d.options.afterLazyLoad.apply(this, [d.$elem])
      }

      function c() {
        f += 1;
        d.completeImg(b.get(0)) || !0 === k ? e() : 100 >= f ? g.setTimeout(c, 100) : e()
      }
      var d = this,
        f = 0,
        k;
      "DIV" === b.prop("tagName") ? (b.css("background-image", "url(" + b.data("src") + ")"), k = !0) : b[0].src = b.data("src");
      c()
    },
    autoHeight: function() {
      function a() {
        var a = f(e.$owlItems[e.currentItem]).height();
        e.wrapperOuter.css("height", a + "px");
        e.wrapperOuter.hasClass("autoHeight") || g.setTimeout(function() {
          e.wrapperOuter.addClass("autoHeight")
        }, 0)
      }

      function b() {
        d += 1;
        e.completeImg(c.get(0)) ? a() : 100 >= d ? g.setTimeout(b, 100) : e.wrapperOuter.css("height", "")
      }
      var e = this,
        c = f(e.$owlItems[e.currentItem]).find("img"),
        d;
      void 0 !== c.get(0) ? (d = 0, b()) : a()
    },
    completeImg: function(a) {
      return !a.complete || "undefined" !== typeof a.naturalWidth && 0 === a.naturalWidth ? !1 : !0
    },
    onVisibleItems: function() {
      var a;
      !0 === this.options.addClassActive && this.$owlItems.removeClass("active");
      this.visibleItems = [];
      for (a = this.currentItem; a < this.currentItem + this.options.items; a += 1) this.visibleItems.push(a), !0 === this.options.addClassActive && f(this.$owlItems[a]).addClass("active");
      this.owl.visibleItems = this.visibleItems
    },
    transitionTypes: function(a) {
      this.outClass = "owl-" + a + "-out";
      this.inClass = "owl-" + a + "-in"
    },
    singleItemTransition: function() {
      var a = this,
        b = a.outClass,
        e = a.inClass,
        c = a.$owlItems.eq(a.currentItem),
        d = a.$owlItems.eq(a.prevItem),
        f = Math.abs(a.positionsInArray[a.currentItem]) + a.positionsInArray[a.prevItem],
        g = Math.abs(a.positionsInArray[a.currentItem]) + a.itemWidth / 2;
      a.isTransition = !0;
      a.$owlWrapper.addClass("owl-origin").css({
        "-webkit-transform-origin": g + "px",
        "-moz-perspective-origin": g + "px",
        "perspective-origin": g + "px"
      });
      d.css({
        position: "relative",
        left: f + "px"
      }).addClass(b).on("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend", function() {
        a.endPrev = !0;
        d.off("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend");
        a.clearTransStyle(d, b)
      });
      c.addClass(e).on("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend", function() {
        a.endCurrent = !0;
        c.off("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend");
        a.clearTransStyle(c, e)
      })
    },
    clearTransStyle: function(a, b) {
      a.css({
        position: "",
        left: ""
      }).removeClass(b);
      this.endPrev && this.endCurrent && (this.$owlWrapper.removeClass("owl-origin"), this.isTransition = this.endCurrent = this.endPrev = !1)
    },
    owlStatus: function() {
      this.owl = {
        userOptions: this.userOptions,
        baseElement: this.$elem,
        userItems: this.$userItems,
        owlItems: this.$owlItems,
        currentItem: this.currentItem,
        prevItem: this.prevItem,
        visibleItems: this.visibleItems,
        isTouch: this.browser.isTouch,
        browser: this.browser,
        dragDirection: this.dragDirection
      }
    },
    clearEvents: function() {
      this.$elem.off(".owl owl mousedown.disableTextSelect");
      f(k).off(".owl owl");
      f(g).off("resize", this.resizer)
    },
    unWrap: function() {
      0 !== this.$elem.children().length && (this.$owlWrapper.unwrap(), this.$userItems.unwrap().unwrap(), this.owlControls && this.owlControls.remove());
      this.clearEvents();
      this.$elem.attr("style", this.$elem.data("owl-originalStyles") || "").attr("class", this.$elem.data("owl-originalClasses"))
    },
    destroy: function() {
      this.stop();
      g.clearInterval(this.checkVisible);
      this.unWrap();
      this.$elem.removeData()
    },
    reinit: function(a) {
      a = f.extend({}, this.userOptions, a);
      this.unWrap();
      this.init(a, this.$elem)
    },
    addItem: function(a, b) {
      var e;
      if (!a) return !1;
      if (0 === this.$elem.children().length) return this.$elem.append(a), this.setVars(), !1;
      this.unWrap();
      e = void 0 === b || -1 === b ? -1 : b;
      e >= this.$userItems.length || -1 === e ? this.$userItems.eq(-1).after(a) : this.$userItems.eq(e).before(a);
      this.setVars()
    },
    removeItem: function(a) {
      if (0 === this.$elem.children().length) return !1;
      a = void 0 === a || -1 === a ? -1 : a;
      this.unWrap();
      this.$userItems.eq(a).remove();
      this.setVars()
    }
  };
  f.fn.owlCarousel = function(a) {
    return this.each(function() {
      if (!0 === f(this).data("owl-init")) return !1;
      f(this).data("owl-init", !0);
      var b = Object.create(l);
      b.init(a, this);
      f.data(this, "owlCarousel", b)
    })
  };
  f.fn.owlCarousel.options = {
    items: 5,
    itemsCustom: !1,
    itemsDesktop: [1199, 4],
    itemsDesktopSmall: [979, 3],
    itemsTablet: [768, 2],
    itemsTabletSmall: !1,
    itemsMobile: [479, 1],
    singleItem: !1,
    itemsScaleUp: !1,
    slideSpeed: 200,
    paginationSpeed: 800,
    rewindSpeed: 1E3,
    autoPlay: !1,
    stopOnHover: !1,
    navigation: !1,
    navigationText: ["prev", "next"],
    rewindNav: !0,
    scrollPerPage: !1,
    pagination: !0,
    paginationNumbers: !1,
    responsive: !0,
    responsiveRefreshRate: 200,
    responsiveBaseWidth: g,
    baseClass: "owl-carousel",
    theme: "owl-theme",
    lazyLoad: !1,
    lazyFollow: !0,
    lazyEffect: "fade",
    autoHeight: !1,
    jsonPath: !1,
    jsonSuccess: !1,
    dragBeforeAnimFinish: !0,
    mouseDrag: !0,
    touchDrag: !0,
    addClassActive: !1,
    transitionStyle: !1,
    beforeUpdate: !1,
    afterUpdate: !1,
    beforeInit: !1,
    afterInit: !1,
    beforeMove: !1,
    afterMove: !1,
    afterAction: !1,
    startDragging: !1,
    afterLazyLoad: !1
  }
})(jQuery, window, document);;
/*!
 * Flickity PACKAGED v2.0.3
 * Touch, responsive, flickable carousels
 *
 * Licensed GPLv3 for open source use
 * or Flickity Commercial License for commercial use
 *
 * http://flickity.metafizzy.co
 * Copyright 2016 Metafizzy
 */
! function(t, e) {
  "function" == typeof define && define.amd ? define("jquery-bridget/jquery-bridget", ["jquery"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("jquery")) : t.jQueryBridget = e(t, t.jQuery)
}(window, function(t, e) {
  "use strict";

  function i(i, o, a) {
    function l(t, e, n) {
      var s, o = "$()." + i + '("' + e + '")';
      return t.each(function(t, l) {
        var h = a.data(l, i);
        if (!h) return void r(i + " not initialized. Cannot call methods, i.e. " + o);
        var c = h[e];
        if (!c || "_" == e.charAt(0)) return void r(o + " is not a valid method");
        var d = c.apply(h, n);
        s = void 0 === s ? d : s
      }), void 0 !== s ? s : t
    }

    function h(t, e) {
      t.each(function(t, n) {
        var s = a.data(n, i);
        s ? (s.option(e), s._init()) : (s = new o(n, e), a.data(n, i, s))
      })
    }
    a = a || e || t.jQuery, a && (o.prototype.option || (o.prototype.option = function(t) {
      a.isPlainObject(t) && (this.options = a.extend(!0, this.options, t))
    }), a.fn[i] = function(t) {
      if ("string" == typeof t) {
        var e = s.call(arguments, 1);
        return l(this, t, e)
      }
      return h(this, t), this
    }, n(a))
  }

  function n(t) {
    !t || t && t.bridget || (t.bridget = i)
  }
  var s = Array.prototype.slice,
    o = t.console,
    r = "undefined" == typeof o ? function() {} : function(t) {
      o.error(t)
    };
  return n(e || t.jQuery), i
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("ev-emitter/ev-emitter", e) : "object" == typeof module && module.exports ? module.exports = e() : t.EvEmitter = e()
}("undefined" != typeof window ? window : this, function() {
  function t() {}
  var e = t.prototype;
  return e.on = function(t, e) {
    if (t && e) {
      var i = this._events = this._events || {},
        n = i[t] = i[t] || [];
      return n.indexOf(e) == -1 && n.push(e), this
    }
  }, e.once = function(t, e) {
    if (t && e) {
      this.on(t, e);
      var i = this._onceEvents = this._onceEvents || {},
        n = i[t] = i[t] || {};
      return n[e] = !0, this
    }
  }, e.off = function(t, e) {
    var i = this._events && this._events[t];
    if (i && i.length) {
      var n = i.indexOf(e);
      return n != -1 && i.splice(n, 1), this
    }
  }, e.emitEvent = function(t, e) {
    var i = this._events && this._events[t];
    if (i && i.length) {
      var n = 0,
        s = i[n];
      e = e || [];
      for (var o = this._onceEvents && this._onceEvents[t]; s;) {
        var r = o && o[s];
        r && (this.off(t, s), delete o[s]), s.apply(this, e), n += r ? 0 : 1, s = i[n]
      }
      return this
    }
  }, t
}),
function(t, e) {
  "use strict";
  "function" == typeof define && define.amd ? define("get-size/get-size", [], function() {
    return e()
  }) : "object" == typeof module && module.exports ? module.exports = e() : t.getSize = e()
}(window, function() {
  "use strict";

  function t(t) {
    var e = parseFloat(t),
      i = t.indexOf("%") == -1 && !isNaN(e);
    return i && e
  }

  function e() {}

  function i() {
    for (var t = {
        width: 0,
        height: 0,
        innerWidth: 0,
        innerHeight: 0,
        outerWidth: 0,
        outerHeight: 0
      }, e = 0; e < h; e++) {
      var i = l[e];
      t[i] = 0
    }
    return t
  }

  function n(t) {
    var e = getComputedStyle(t);
    return e || a("Style returned " + e + ". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"), e
  }

  function s() {
    if (!c) {
      c = !0;
      var e = document.createElement("div");
      e.style.width = "200px", e.style.padding = "1px 2px 3px 4px", e.style.borderStyle = "solid", e.style.borderWidth = "1px 2px 3px 4px", e.style.boxSizing = "border-box";
      var i = document.body || document.documentElement;
      i.appendChild(e);
      var s = n(e);
      o.isBoxSizeOuter = r = 200 == t(s.width), i.removeChild(e)
    }
  }

  function o(e) {
    if (s(), "string" == typeof e && (e = document.querySelector(e)), e && "object" == typeof e && e.nodeType) {
      var o = n(e);
      if ("none" == o.display) return i();
      var a = {};
      a.width = e.offsetWidth, a.height = e.offsetHeight;
      for (var c = a.isBorderBox = "border-box" == o.boxSizing, d = 0; d < h; d++) {
        var u = l[d],
          f = o[u],
          p = parseFloat(f);
        a[u] = isNaN(p) ? 0 : p
      }
      var v = a.paddingLeft + a.paddingRight,
        g = a.paddingTop + a.paddingBottom,
        m = a.marginLeft + a.marginRight,
        y = a.marginTop + a.marginBottom,
        S = a.borderLeftWidth + a.borderRightWidth,
        E = a.borderTopWidth + a.borderBottomWidth,
        b = c && r,
        x = t(o.width);
      x !== !1 && (a.width = x + (b ? 0 : v + S));
      var C = t(o.height);
      return C !== !1 && (a.height = C + (b ? 0 : g + E)), a.innerWidth = a.width - (v + S), a.innerHeight = a.height - (g + E), a.outerWidth = a.width + m, a.outerHeight = a.height + y, a
    }
  }
  var r, a = "undefined" == typeof console ? e : function(t) {
      console.error(t)
    },
    l = ["paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth"],
    h = l.length,
    c = !1;
  return o
}),
function(t, e) {
  "use strict";
  "function" == typeof define && define.amd ? define("desandro-matches-selector/matches-selector", e) : "object" == typeof module && module.exports ? module.exports = e() : t.matchesSelector = e()
}(window, function() {
  "use strict";
  var t = function() {
    var t = Element.prototype;
    if (t.matches) return "matches";
    if (t.matchesSelector) return "matchesSelector";
    for (var e = ["webkit", "moz", "ms", "o"], i = 0; i < e.length; i++) {
      var n = e[i],
        s = n + "MatchesSelector";
      if (t[s]) return s
    }
  }();
  return function(e, i) {
    return e[t](i)
  }
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("fizzy-ui-utils/utils", ["desandro-matches-selector/matches-selector"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("desandro-matches-selector")) : t.fizzyUIUtils = e(t, t.matchesSelector)
}(window, function(t, e) {
  var i = {};
  i.extend = function(t, e) {
    for (var i in e) t[i] = e[i];
    return t
  }, i.modulo = function(t, e) {
    return (t % e + e) % e
  }, i.makeArray = function(t) {
    var e = [];
    if (Array.isArray(t)) e = t;
    else if (t && "number" == typeof t.length)
      for (var i = 0; i < t.length; i++) e.push(t[i]);
    else e.push(t);
    return e
  }, i.removeFrom = function(t, e) {
    var i = t.indexOf(e);
    i != -1 && t.splice(i, 1)
  }, i.getParent = function(t, i) {
    for (; t != document.body;)
      if (t = t.parentNode, e(t, i)) return t
  }, i.getQueryElement = function(t) {
    return "string" == typeof t ? document.querySelector(t) : t
  }, i.handleEvent = function(t) {
    var e = "on" + t.type;
    this[e] && this[e](t)
  }, i.filterFindElements = function(t, n) {
    t = i.makeArray(t);
    var s = [];
    return t.forEach(function(t) {
      if (t instanceof HTMLElement) {
        if (!n) return void s.push(t);
        e(t, n) && s.push(t);
        for (var i = t.querySelectorAll(n), o = 0; o < i.length; o++) s.push(i[o])
      }
    }), s
  }, i.debounceMethod = function(t, e, i) {
    var n = t.prototype[e],
      s = e + "Timeout";
    t.prototype[e] = function() {
      var t = this[s];
      t && clearTimeout(t);
      var e = arguments,
        o = this;
      this[s] = setTimeout(function() {
        n.apply(o, e), delete o[s]
      }, i || 100)
    }
  }, i.docReady = function(t) {
    var e = document.readyState;
    "complete" == e || "interactive" == e ? t() : document.addEventListener("DOMContentLoaded", t)
  }, i.toDashed = function(t) {
    return t.replace(/(.)([A-Z])/g, function(t, e, i) {
      return e + "-" + i
    }).toLowerCase()
  };
  var n = t.console;
  return i.htmlInit = function(e, s) {
    i.docReady(function() {
      var o = i.toDashed(s),
        r = "data-" + o,
        a = document.querySelectorAll("[" + r + "]"),
        l = document.querySelectorAll(".js-" + o),
        h = i.makeArray(a).concat(i.makeArray(l)),
        c = r + "-options",
        d = t.jQuery;
      h.forEach(function(t) {
        var i, o = t.getAttribute(r) || t.getAttribute(c);
        try {
          i = o && JSON.parse(o)
        } catch (a) {
          return void(n && n.error("Error parsing " + r + " on " + t.className + ": " + a))
        }
        var l = new e(t, i);
        d && d.data(t, s, l)
      })
    })
  }, i
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/cell", ["get-size/get-size"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("get-size")) : (t.Flickity = t.Flickity || {}, t.Flickity.Cell = e(t, t.getSize))
}(window, function(t, e) {
  function i(t, e) {
    this.element = t, this.parent = e, this.create()
  }
  var n = i.prototype;
  return n.create = function() {
    this.element.style.position = "absolute", this.x = 0, this.shift = 0
  }, n.destroy = function() {
    this.element.style.position = "";
    var t = this.parent.originSide;
    this.element.style[t] = ""
  }, n.getSize = function() {
    this.size = e(this.element)
  }, n.setPosition = function(t) {
    this.x = t, this.updateTarget(), this.renderPosition(t)
  }, n.updateTarget = n.setDefaultTarget = function() {
    var t = "left" == this.parent.originSide ? "marginLeft" : "marginRight";
    this.target = this.x + this.size[t] + this.size.width * this.parent.cellAlign
  }, n.renderPosition = function(t) {
    var e = this.parent.originSide;
    this.element.style[e] = this.parent.getPositionValue(t)
  }, n.wrapShift = function(t) {
    this.shift = t, this.renderPosition(this.x + this.parent.slideableWidth * t)
  }, n.remove = function() {
    this.element.parentNode.removeChild(this.element)
  }, i
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/slide", e) : "object" == typeof module && module.exports ? module.exports = e() : (t.Flickity = t.Flickity || {}, t.Flickity.Slide = e())
}(window, function() {
  "use strict";

  function t(t) {
    this.parent = t, this.isOriginLeft = "left" == t.originSide, this.cells = [], this.outerWidth = 0, this.height = 0
  }
  var e = t.prototype;
  return e.addCell = function(t) {
    if (this.cells.push(t), this.outerWidth += t.size.outerWidth, this.height = Math.max(t.size.outerHeight, this.height), 1 == this.cells.length) {
      this.x = t.x;
      var e = this.isOriginLeft ? "marginLeft" : "marginRight";
      this.firstMargin = t.size[e]
    }
  }, e.updateTarget = function() {
    var t = this.isOriginLeft ? "marginRight" : "marginLeft",
      e = this.getLastCell(),
      i = e ? e.size[t] : 0,
      n = this.outerWidth - (this.firstMargin + i);
    this.target = this.x + this.firstMargin + n * this.parent.cellAlign
  }, e.getLastCell = function() {
    return this.cells[this.cells.length - 1]
  }, e.select = function() {
    this.changeSelectedClass("add")
  }, e.unselect = function() {
    this.changeSelectedClass("remove")
  }, e.changeSelectedClass = function(t) {
    this.cells.forEach(function(e) {
      e.element.classList[t]("is-selected")
    })
  }, e.getCellElements = function() {
    return this.cells.map(function(t) {
      return t.element
    })
  }, t
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/animate", ["fizzy-ui-utils/utils"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("fizzy-ui-utils")) : (t.Flickity = t.Flickity || {}, t.Flickity.animatePrototype = e(t, t.fizzyUIUtils))
}(window, function(t, e) {
  var i = t.requestAnimationFrame || t.webkitRequestAnimationFrame,
    n = 0;
  i || (i = function(t) {
    var e = (new Date).getTime(),
      i = Math.max(0, 16 - (e - n)),
      s = setTimeout(t, i);
    return n = e + i, s
  });
  var s = {};
  s.startAnimation = function() {
    this.isAnimating || (this.isAnimating = !0, this.restingFrames = 0, this.animate())
  }, s.animate = function() {
    this.applyDragForce(), this.applySelectedAttraction();
    var t = this.x;
    if (this.integratePhysics(), this.positionSlider(), this.settle(t), this.isAnimating) {
      var e = this;
      i(function() {
        e.animate()
      })
    }
  };
  var o = function() {
    var t = document.documentElement.style;
    return "string" == typeof t.transform ? "transform" : "WebkitTransform"
  }();
  return s.positionSlider = function() {
    var t = this.x;
    this.options.wrapAround && this.cells.length > 1 && (t = e.modulo(t, this.slideableWidth), t -= this.slideableWidth, this.shiftWrapCells(t)), t += this.cursorPosition, t = this.options.rightToLeft && o ? -t : t;
    var i = this.getPositionValue(t);
    this.slider.style[o] = this.isAnimating ? "translate3d(" + i + ",0,0)" : "translateX(" + i + ")";
    var n = this.slides[0];
    if (n) {
      var s = -this.x - n.target,
        r = s / this.slidesWidth;
      this.dispatchEvent("scroll", null, [r, s])
    }
  }, s.positionSliderAtSelected = function() {
    this.cells.length && (this.x = -this.selectedSlide.target, this.positionSlider())
  }, s.getPositionValue = function(t) {
    return this.options.percentPosition ? .01 * Math.round(t / this.size.innerWidth * 1e4) + "%" : Math.round(t) + "px"
  }, s.settle = function(t) {
    this.isPointerDown || Math.round(100 * this.x) != Math.round(100 * t) || this.restingFrames++, this.restingFrames > 2 && (this.isAnimating = !1, delete this.isFreeScrolling, this.positionSlider(), this.dispatchEvent("settle"))
  }, s.shiftWrapCells = function(t) {
    var e = this.cursorPosition + t;
    this._shiftCells(this.beforeShiftCells, e, -1);
    var i = this.size.innerWidth - (t + this.slideableWidth + this.cursorPosition);
    this._shiftCells(this.afterShiftCells, i, 1)
  }, s._shiftCells = function(t, e, i) {
    for (var n = 0; n < t.length; n++) {
      var s = t[n],
        o = e > 0 ? i : 0;
      s.wrapShift(o), e -= s.size.outerWidth
    }
  }, s._unshiftCells = function(t) {
    if (t && t.length)
      for (var e = 0; e < t.length; e++) t[e].wrapShift(0)
  }, s.integratePhysics = function() {
    this.x += this.velocity, this.velocity *= this.getFrictionFactor()
  }, s.applyForce = function(t) {
    this.velocity += t
  }, s.getFrictionFactor = function() {
    return 1 - this.options[this.isFreeScrolling ? "freeScrollFriction" : "friction"]
  }, s.getRestingPosition = function() {
    return this.x + this.velocity / (1 - this.getFrictionFactor())
  }, s.applyDragForce = function() {
    if (this.isPointerDown) {
      var t = this.dragX - this.x,
        e = t - this.velocity;
      this.applyForce(e)
    }
  }, s.applySelectedAttraction = function() {
    if (!this.isPointerDown && !this.isFreeScrolling && this.cells.length) {
      var t = this.selectedSlide.target * -1 - this.x,
        e = t * this.options.selectedAttraction;
      this.applyForce(e)
    }
  }, s
}),
function(t, e) {
  if ("function" == typeof define && define.amd) define("flickity/js/flickity", ["ev-emitter/ev-emitter", "get-size/get-size", "fizzy-ui-utils/utils", "./cell", "./slide", "./animate"], function(i, n, s, o, r, a) {
    return e(t, i, n, s, o, r, a)
  });
  else if ("object" == typeof module && module.exports) module.exports = e(t, require("ev-emitter"), require("get-size"), require("fizzy-ui-utils"), require("./cell"), require("./slide"), require("./animate"));
  else {
    var i = t.Flickity;
    t.Flickity = e(t, t.EvEmitter, t.getSize, t.fizzyUIUtils, i.Cell, i.Slide, i.animatePrototype)
  }
}(window, function(t, e, i, n, s, o, r) {
  function a(t, e) {
    for (t = n.makeArray(t); t.length;) e.appendChild(t.shift())
  }

  function l(t, e) {
    var i = n.getQueryElement(t);
    if (!i) return void(d && d.error("Bad element for Flickity: " + (i || t)));
    if (this.element = i, this.element.flickityGUID) {
      var s = f[this.element.flickityGUID];
      return s.option(e), s
    }
    h && (this.$element = h(this.element)), this.options = n.extend({}, this.constructor.defaults), this.option(e), this._create()
  }
  var h = t.jQuery,
    c = t.getComputedStyle,
    d = t.console,
    u = 0,
    f = {};
  l.defaults = {
    accessibility: !0,
    cellAlign: "center",
    freeScrollFriction: .075,
    friction: .28,
    namespaceJQueryEvents: !0,
    percentPosition: !0,
    resize: !0,
    selectedAttraction: .025,
    setGallerySize: !0
  }, l.createMethods = [];
  var p = l.prototype;
  n.extend(p, e.prototype), p._create = function() {
    var e = this.guid = ++u;
    this.element.flickityGUID = e, f[e] = this, this.selectedIndex = 0, this.restingFrames = 0, this.x = 0, this.velocity = 0, this.originSide = this.options.rightToLeft ? "right" : "left", this.viewport = document.createElement("div"), this.viewport.className = "flickity-viewport", this._createSlider(), (this.options.resize || this.options.watchCSS) && t.addEventListener("resize", this), l.createMethods.forEach(function(t) {
      this[t]()
    }, this), this.options.watchCSS ? this.watchCSS() : this.activate()
  }, p.option = function(t) {
    n.extend(this.options, t)
  }, p.activate = function() {
    if (!this.isActive) {
      this.isActive = !0, this.element.classList.add("flickity-enabled"), this.options.rightToLeft && this.element.classList.add("flickity-rtl"), this.getSize();
      var t = this._filterFindCellElements(this.element.children);
      a(t, this.slider), this.viewport.appendChild(this.slider), this.element.appendChild(this.viewport), this.reloadCells(), this.options.accessibility && (this.element.tabIndex = 0, this.element.addEventListener("keydown", this)), this.emitEvent("activate");
      var e, i = this.options.initialIndex;
      e = this.isInitActivated ? this.selectedIndex : void 0 !== i && this.cells[i] ? i : 0, this.select(e, !1, !0), this.isInitActivated = !0
    }
  }, p._createSlider = function() {
    var t = document.createElement("div");
    t.className = "flickity-slider", t.style[this.originSide] = 0, this.slider = t
  }, p._filterFindCellElements = function(t) {
    return n.filterFindElements(t, this.options.cellSelector)
  }, p.reloadCells = function() {
    this.cells = this._makeCells(this.slider.children), this.positionCells(), this._getWrapShiftCells(), this.setGallerySize()
  }, p._makeCells = function(t) {
    var e = this._filterFindCellElements(t),
      i = e.map(function(t) {
        return new s(t, this)
      }, this);
    return i
  }, p.getLastCell = function() {
    return this.cells[this.cells.length - 1]
  }, p.getLastSlide = function() {
    return this.slides[this.slides.length - 1]
  }, p.positionCells = function() {
    this._sizeCells(this.cells), this._positionCells(0)
  }, p._positionCells = function(t) {
    t = t || 0, this.maxCellHeight = t ? this.maxCellHeight || 0 : 0;
    var e = 0;
    if (t > 0) {
      var i = this.cells[t - 1];
      e = i.x + i.size.outerWidth
    }
    for (var n = this.cells.length, s = t; s < n; s++) {
      var o = this.cells[s];
      o.setPosition(e), e += o.size.outerWidth, this.maxCellHeight = Math.max(o.size.outerHeight, this.maxCellHeight)
    }
    this.slideableWidth = e, this.updateSlides(), this._containSlides(), this.slidesWidth = n ? this.getLastSlide().target - this.slides[0].target : 0
  }, p._sizeCells = function(t) {
    t.forEach(function(t) {
      t.getSize()
    })
  }, p.updateSlides = function() {
    if (this.slides = [], this.cells.length) {
      var t = new o(this);
      this.slides.push(t);
      var e = "left" == this.originSide,
        i = e ? "marginRight" : "marginLeft",
        n = this._getCanCellFit();
      this.cells.forEach(function(e, s) {
        if (!t.cells.length) return void t.addCell(e);
        var r = t.outerWidth - t.firstMargin + (e.size.outerWidth - e.size[i]);
        n.call(this, s, r) ? t.addCell(e) : (t.updateTarget(), t = new o(this), this.slides.push(t), t.addCell(e))
      }, this), t.updateTarget(), this.updateSelectedSlide()
    }
  }, p._getCanCellFit = function() {
    var t = this.options.groupCells;
    if (!t) return function() {
      return !1
    };
    if ("number" == typeof t) {
      var e = parseInt(t, 10);
      return function(t) {
        return t % e !== 0
      }
    }
    var i = "string" == typeof t && t.match(/^(\d+)%$/),
      n = i ? parseInt(i[1], 10) / 100 : 1;
    return function(t, e) {
      return e <= (this.size.innerWidth + 1) * n
    }
  }, p._init = p.reposition = function() {
    this.positionCells(), this.positionSliderAtSelected()
  }, p.getSize = function() {
    this.size = i(this.element), this.setCellAlign(), this.cursorPosition = this.size.innerWidth * this.cellAlign
  };
  var v = {
    center: {
      left: .5,
      right: .5
    },
    left: {
      left: 0,
      right: 1
    },
    right: {
      right: 0,
      left: 1
    }
  };
  return p.setCellAlign = function() {
    var t = v[this.options.cellAlign];
    this.cellAlign = t ? t[this.originSide] : this.options.cellAlign
  }, p.setGallerySize = function() {
    if (this.options.setGallerySize) {
      var t = this.options.adaptiveHeight && this.selectedSlide ? this.selectedSlide.height : this.maxCellHeight;
      this.viewport.style.height = t + "px"
    }
  }, p._getWrapShiftCells = function() {
    if (this.options.wrapAround) {
      this._unshiftCells(this.beforeShiftCells), this._unshiftCells(this.afterShiftCells);
      var t = this.cursorPosition,
        e = this.cells.length - 1;
      this.beforeShiftCells = this._getGapCells(t, e, -1), t = this.size.innerWidth - this.cursorPosition, this.afterShiftCells = this._getGapCells(t, 0, 1)
    }
  }, p._getGapCells = function(t, e, i) {
    for (var n = []; t > 0;) {
      var s = this.cells[e];
      if (!s) break;
      n.push(s), e += i, t -= s.size.outerWidth
    }
    return n
  }, p._containSlides = function() {
    if (this.options.contain && !this.options.wrapAround && this.cells.length) {
      var t = this.options.rightToLeft,
        e = t ? "marginRight" : "marginLeft",
        i = t ? "marginLeft" : "marginRight",
        n = this.slideableWidth - this.getLastCell().size[i],
        s = n < this.size.innerWidth,
        o = this.cursorPosition + this.cells[0].size[e],
        r = n - this.size.innerWidth * (1 - this.cellAlign);
      this.slides.forEach(function(t) {
        s ? t.target = n * this.cellAlign : (t.target = Math.max(t.target, o), t.target = Math.min(t.target, r))
      }, this)
    }
  }, p.dispatchEvent = function(t, e, i) {
    var n = e ? [e].concat(i) : i;
    if (this.emitEvent(t, n), h && this.$element) {
      t += this.options.namespaceJQueryEvents ? ".flickity" : "";
      var s = t;
      if (e) {
        var o = h.Event(e);
        o.type = t, s = o
      }
      this.$element.trigger(s, i)
    }
  }, p.select = function(t, e, i) {
    this.isActive && (t = parseInt(t, 10), this._wrapSelect(t), (this.options.wrapAround || e) && (t = n.modulo(t, this.slides.length)), this.slides[t] && (this.selectedIndex = t, this.updateSelectedSlide(), i ? this.positionSliderAtSelected() : this.startAnimation(), this.options.adaptiveHeight && this.setGallerySize(), this.dispatchEvent("select"), this.dispatchEvent("cellSelect")))
  }, p._wrapSelect = function(t) {
    var e = this.slides.length,
      i = this.options.wrapAround && e > 1;
    if (!i) return t;
    var s = n.modulo(t, e),
      o = Math.abs(s - this.selectedIndex),
      r = Math.abs(s + e - this.selectedIndex),
      a = Math.abs(s - e - this.selectedIndex);
    !this.isDragSelect && r < o ? t += e : !this.isDragSelect && a < o && (t -= e), t < 0 ? this.x -= this.slideableWidth : t >= e && (this.x += this.slideableWidth)
  }, p.previous = function(t, e) {
    this.select(this.selectedIndex - 1, t, e)
  }, p.next = function(t, e) {
    this.select(this.selectedIndex + 1, t, e)
  }, p.updateSelectedSlide = function() {
    var t = this.slides[this.selectedIndex];
    t && (this.unselectSelectedSlide(), this.selectedSlide = t, t.select(), this.selectedCells = t.cells, this.selectedElements = t.getCellElements(), this.selectedCell = t.cells[0], this.selectedElement = this.selectedElements[0])
  }, p.unselectSelectedSlide = function() {
    this.selectedSlide && this.selectedSlide.unselect()
  }, p.selectCell = function(t, e, i) {
    var n;
    "number" == typeof t ? n = this.cells[t] : ("string" == typeof t && (t = this.element.querySelector(t)), n = this.getCell(t));
    for (var s = 0; n && s < this.slides.length; s++) {
      var o = this.slides[s],
        r = o.cells.indexOf(n);
      if (r != -1) return void this.select(s, e, i)
    }
  }, p.getCell = function(t) {
    for (var e = 0; e < this.cells.length; e++) {
      var i = this.cells[e];
      if (i.element == t) return i
    }
  }, p.getCells = function(t) {
    t = n.makeArray(t);
    var e = [];
    return t.forEach(function(t) {
      var i = this.getCell(t);
      i && e.push(i)
    }, this), e
  }, p.getCellElements = function() {
    return this.cells.map(function(t) {
      return t.element
    })
  }, p.getParentCell = function(t) {
    var e = this.getCell(t);
    return e ? e : (t = n.getParent(t, ".flickity-slider > *"), this.getCell(t))
  }, p.getAdjacentCellElements = function(t, e) {
    if (!t) return this.selectedSlide.getCellElements();
    e = void 0 === e ? this.selectedIndex : e;
    var i = this.slides.length;
    if (1 + 2 * t >= i) return this.getCellElements();
    for (var s = [], o = e - t; o <= e + t; o++) {
      var r = this.options.wrapAround ? n.modulo(o, i) : o,
        a = this.slides[r];
      a && (s = s.concat(a.getCellElements()))
    }
    return s
  }, p.uiChange = function() {
    this.emitEvent("uiChange")
  }, p.childUIPointerDown = function(t) {
    this.emitEvent("childUIPointerDown", [t])
  }, p.onresize = function() {
    this.watchCSS(), this.resize()
  }, n.debounceMethod(l, "onresize", 150), p.resize = function() {
    if (this.isActive) {
      this.getSize(), this.options.wrapAround && (this.x = n.modulo(this.x, this.slideableWidth)), this.positionCells(), this._getWrapShiftCells(), this.setGallerySize(), this.emitEvent("resize");
      var t = this.selectedElements && this.selectedElements[0];
      this.selectCell(t, !1, !0)
    }
  }, p.watchCSS = function() {
    var t = this.options.watchCSS;
    if (t) {
      var e = c(this.element, ":after").content;
      e.indexOf("flickity") != -1 ? this.activate() : this.deactivate()
    }
  }, p.onkeydown = function(t) {
    if (this.options.accessibility && (!document.activeElement || document.activeElement == this.element))
      if (37 == t.keyCode) {
        var e = this.options.rightToLeft ? "next" : "previous";
        this.uiChange(), this[e]()
      } else if (39 == t.keyCode) {
      var i = this.options.rightToLeft ? "previous" : "next";
      this.uiChange(), this[i]()
    }
  }, p.deactivate = function() {
    this.isActive && (this.element.classList.remove("flickity-enabled"), this.element.classList.remove("flickity-rtl"), this.cells.forEach(function(t) {
      t.destroy()
    }), this.unselectSelectedSlide(), this.element.removeChild(this.viewport), a(this.slider.children, this.element), this.options.accessibility && (this.element.removeAttribute("tabIndex"), this.element.removeEventListener("keydown", this)), this.isActive = !1, this.emitEvent("deactivate"))
  }, p.destroy = function() {
    this.deactivate(), t.removeEventListener("resize", this), this.emitEvent("destroy"), h && this.$element && h.removeData(this.element, "flickity"), delete this.element.flickityGUID, delete f[this.guid]
  }, n.extend(p, r), l.data = function(t) {
    t = n.getQueryElement(t);
    var e = t && t.flickityGUID;
    return e && f[e]
  }, n.htmlInit(l, "flickity"), h && h.bridget && h.bridget("flickity", l), l.Cell = s, l
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("unipointer/unipointer", ["ev-emitter/ev-emitter"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("ev-emitter")) : t.Unipointer = e(t, t.EvEmitter)
}(window, function(t, e) {
  function i() {}

  function n() {}
  var s = n.prototype = Object.create(e.prototype);
  s.bindStartEvent = function(t) {
    this._bindStartEvent(t, !0)
  }, s.unbindStartEvent = function(t) {
    this._bindStartEvent(t, !1)
  }, s._bindStartEvent = function(e, i) {
    i = void 0 === i || !!i;
    var n = i ? "addEventListener" : "removeEventListener";
    t.navigator.pointerEnabled ? e[n]("pointerdown", this) : t.navigator.msPointerEnabled ? e[n]("MSPointerDown", this) : (e[n]("mousedown", this), e[n]("touchstart", this))
  }, s.handleEvent = function(t) {
    var e = "on" + t.type;
    this[e] && this[e](t)
  }, s.getTouch = function(t) {
    for (var e = 0; e < t.length; e++) {
      var i = t[e];
      if (i.identifier == this.pointerIdentifier) return i
    }
  }, s.onmousedown = function(t) {
    var e = t.button;
    e && 0 !== e && 1 !== e || this._pointerDown(t, t)
  }, s.ontouchstart = function(t) {
    this._pointerDown(t, t.changedTouches[0])
  }, s.onMSPointerDown = s.onpointerdown = function(t) {
    this._pointerDown(t, t)
  }, s._pointerDown = function(t, e) {
    this.isPointerDown || (this.isPointerDown = !0, this.pointerIdentifier = void 0 !== e.pointerId ? e.pointerId : e.identifier, this.pointerDown(t, e))
  }, s.pointerDown = function(t, e) {
    this._bindPostStartEvents(t), this.emitEvent("pointerDown", [t, e])
  };
  var o = {
    mousedown: ["mousemove", "mouseup"],
    touchstart: ["touchmove", "touchend", "touchcancel"],
    pointerdown: ["pointermove", "pointerup", "pointercancel"],
    MSPointerDown: ["MSPointerMove", "MSPointerUp", "MSPointerCancel"]
  };
  return s._bindPostStartEvents = function(e) {
    if (e) {
      var i = o[e.type];
      i.forEach(function(e) {
        t.addEventListener(e, this)
      }, this), this._boundPointerEvents = i
    }
  }, s._unbindPostStartEvents = function() {
    this._boundPointerEvents && (this._boundPointerEvents.forEach(function(e) {
      t.removeEventListener(e, this)
    }, this), delete this._boundPointerEvents)
  }, s.onmousemove = function(t) {
    this._pointerMove(t, t)
  }, s.onMSPointerMove = s.onpointermove = function(t) {
    t.pointerId == this.pointerIdentifier && this._pointerMove(t, t)
  }, s.ontouchmove = function(t) {
    var e = this.getTouch(t.changedTouches);
    e && this._pointerMove(t, e)
  }, s._pointerMove = function(t, e) {
    this.pointerMove(t, e)
  }, s.pointerMove = function(t, e) {
    this.emitEvent("pointerMove", [t, e])
  }, s.onmouseup = function(t) {
    this._pointerUp(t, t)
  }, s.onMSPointerUp = s.onpointerup = function(t) {
    t.pointerId == this.pointerIdentifier && this._pointerUp(t, t)
  }, s.ontouchend = function(t) {
    var e = this.getTouch(t.changedTouches);
    e && this._pointerUp(t, e)
  }, s._pointerUp = function(t, e) {
    this._pointerDone(), this.pointerUp(t, e)
  }, s.pointerUp = function(t, e) {
    this.emitEvent("pointerUp", [t, e])
  }, s._pointerDone = function() {
    this.isPointerDown = !1, delete this.pointerIdentifier, this._unbindPostStartEvents(), this.pointerDone()
  }, s.pointerDone = i, s.onMSPointerCancel = s.onpointercancel = function(t) {
    t.pointerId == this.pointerIdentifier && this._pointerCancel(t, t)
  }, s.ontouchcancel = function(t) {
    var e = this.getTouch(t.changedTouches);
    e && this._pointerCancel(t, e)
  }, s._pointerCancel = function(t, e) {
    this._pointerDone(), this.pointerCancel(t, e)
  }, s.pointerCancel = function(t, e) {
    this.emitEvent("pointerCancel", [t, e])
  }, n.getPointerPoint = function(t) {
    return {
      x: t.pageX,
      y: t.pageY
    }
  }, n
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("unidragger/unidragger", ["unipointer/unipointer"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("unipointer")) : t.Unidragger = e(t, t.Unipointer)
}(window, function(t, e) {
  function i() {}

  function n() {}
  var s = n.prototype = Object.create(e.prototype);
  s.bindHandles = function() {
    this._bindHandles(!0)
  }, s.unbindHandles = function() {
    this._bindHandles(!1)
  };
  var o = t.navigator;
  return s._bindHandles = function(t) {
    t = void 0 === t || !!t;
    var e;
    e = o.pointerEnabled ? function(e) {
      e.style.touchAction = t ? "none" : ""
    } : o.msPointerEnabled ? function(e) {
      e.style.msTouchAction = t ? "none" : ""
    } : i;
    for (var n = t ? "addEventListener" : "removeEventListener", s = 0; s < this.handles.length; s++) {
      var r = this.handles[s];
      this._bindStartEvent(r, t), e(r), r[n]("click", this)
    }
  }, s.pointerDown = function(t, e) {
    if ("INPUT" == t.target.nodeName && "range" == t.target.type) return this.isPointerDown = !1, void delete this.pointerIdentifier;
    this._dragPointerDown(t, e);
    var i = document.activeElement;
    i && i.blur && i.blur(), this._bindPostStartEvents(t), this.emitEvent("pointerDown", [t, e])
  }, s._dragPointerDown = function(t, i) {
    this.pointerDownPoint = e.getPointerPoint(i);
    var n = this.canPreventDefaultOnPointerDown(t, i);
    n && t.preventDefault()
  }, s.canPreventDefaultOnPointerDown = function(t) {
    return "SELECT" != t.target.nodeName
  }, s.pointerMove = function(t, e) {
    var i = this._dragPointerMove(t, e);
    this.emitEvent("pointerMove", [t, e, i]), this._dragMove(t, e, i)
  }, s._dragPointerMove = function(t, i) {
    var n = e.getPointerPoint(i),
      s = {
        x: n.x - this.pointerDownPoint.x,
        y: n.y - this.pointerDownPoint.y
      };
    return !this.isDragging && this.hasDragStarted(s) && this._dragStart(t, i), s
  }, s.hasDragStarted = function(t) {
    return Math.abs(t.x) > 3 || Math.abs(t.y) > 3
  }, s.pointerUp = function(t, e) {
    this.emitEvent("pointerUp", [t, e]), this._dragPointerUp(t, e)
  }, s._dragPointerUp = function(t, e) {
    this.isDragging ? this._dragEnd(t, e) : this._staticClick(t, e)
  }, s._dragStart = function(t, i) {
    this.isDragging = !0, this.dragStartPoint = e.getPointerPoint(i), this.isPreventingClicks = !0, this.dragStart(t, i)
  }, s.dragStart = function(t, e) {
    this.emitEvent("dragStart", [t, e])
  }, s._dragMove = function(t, e, i) {
    this.isDragging && this.dragMove(t, e, i)
  }, s.dragMove = function(t, e, i) {
    t.preventDefault(), this.emitEvent("dragMove", [t, e, i])
  }, s._dragEnd = function(t, e) {
    this.isDragging = !1, setTimeout(function() {
      delete this.isPreventingClicks
    }.bind(this)), this.dragEnd(t, e)
  }, s.dragEnd = function(t, e) {
    this.emitEvent("dragEnd", [t, e])
  }, s.onclick = function(t) {
    this.isPreventingClicks && t.preventDefault()
  }, s._staticClick = function(t, e) {
    if (!this.isIgnoringMouseUp || "mouseup" != t.type) {
      var i = t.target.nodeName;
      "INPUT" != i && "TEXTAREA" != i || t.target.focus(), this.staticClick(t, e), "mouseup" != t.type && (this.isIgnoringMouseUp = !0, setTimeout(function() {
        delete this.isIgnoringMouseUp
      }.bind(this), 400))
    }
  }, s.staticClick = function(t, e) {
    this.emitEvent("staticClick", [t, e])
  }, n.getPointerPoint = e.getPointerPoint, n
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/drag", ["./flickity", "unidragger/unidragger", "fizzy-ui-utils/utils"], function(i, n, s) {
    return e(t, i, n, s)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("./flickity"), require("unidragger"), require("fizzy-ui-utils")) : t.Flickity = e(t, t.Flickity, t.Unidragger, t.fizzyUIUtils)
}(window, function(t, e, i, n) {
  function s() {
    return {
      x: t.pageXOffset,
      y: t.pageYOffset
    }
  }
  n.extend(e.defaults, {
    draggable: !0,
    dragThreshold: 3
  }), e.createMethods.push("_createDrag");
  var o = e.prototype;
  n.extend(o, i.prototype), o._createDrag = function() {
    this.on("activate", this.bindDrag), this.on("uiChange", this._uiChangeDrag), this.on("childUIPointerDown", this._childUIPointerDownDrag), this.on("deactivate", this.unbindDrag)
  }, o.bindDrag = function() {
    this.options.draggable && !this.isDragBound && (this.element.classList.add("is-draggable"), this.handles = [this.viewport], this.bindHandles(), this.isDragBound = !0)
  }, o.unbindDrag = function() {
    this.isDragBound && (this.element.classList.remove("is-draggable"), this.unbindHandles(), delete this.isDragBound)
  }, o._uiChangeDrag = function() {
    delete this.isFreeScrolling
  }, o._childUIPointerDownDrag = function(t) {
    t.preventDefault(), this.pointerDownFocus(t)
  };
  var r = {
      TEXTAREA: !0,
      INPUT: !0,
      OPTION: !0
    },
    a = {
      radio: !0,
      checkbox: !0,
      button: !0,
      submit: !0,
      image: !0,
      file: !0
    };
  o.pointerDown = function(e, i) {
    var n = r[e.target.nodeName] && !a[e.target.type];
    if (n) return this.isPointerDown = !1, void delete this.pointerIdentifier;
    this._dragPointerDown(e, i);
    var o = document.activeElement;
    o && o.blur && o != this.element && o != document.body && o.blur(), this.pointerDownFocus(e), this.dragX = this.x, this.viewport.classList.add("is-pointer-down"), this._bindPostStartEvents(e), this.pointerDownScroll = s(), t.addEventListener("scroll", this), this.dispatchEvent("pointerDown", e, [i])
  };
  var l = {
      touchstart: !0,
      MSPointerDown: !0
    },
    h = {
      INPUT: !0,
      SELECT: !0
    };
  return o.pointerDownFocus = function(e) {
    if (this.options.accessibility && !l[e.type] && !h[e.target.nodeName]) {
      var i = t.pageYOffset;
      this.element.focus(), t.pageYOffset != i && t.scrollTo(t.pageXOffset, i)
    }
  }, o.canPreventDefaultOnPointerDown = function(t) {
    var e = "touchstart" == t.type,
      i = t.target.nodeName;
    return !e && "SELECT" != i
  }, o.hasDragStarted = function(t) {
    return Math.abs(t.x) > this.options.dragThreshold
  }, o.pointerUp = function(t, e) {
    delete this.isTouchScrolling, this.viewport.classList.remove("is-pointer-down"), this.dispatchEvent("pointerUp", t, [e]), this._dragPointerUp(t, e)
  }, o.pointerDone = function() {
    t.removeEventListener("scroll", this), delete this.pointerDownScroll
  }, o.dragStart = function(t, e) {
    this.dragStartPosition = this.x, this.startAnimation(), this.dispatchEvent("dragStart", t, [e])
  }, o.pointerMove = function(t, e) {
    var i = this._dragPointerMove(t, e);
    this.dispatchEvent("pointerMove", t, [e, i]), this._dragMove(t, e, i)
  }, o.dragMove = function(t, e, i) {
    t.preventDefault(), this.previousDragX = this.dragX;
    var n = this.options.rightToLeft ? -1 : 1,
      s = this.dragStartPosition + i.x * n;
    if (!this.options.wrapAround && this.slides.length) {
      var o = Math.max(-this.slides[0].target, this.dragStartPosition);
      s = s > o ? .5 * (s + o) : s;
      var r = Math.min(-this.getLastSlide().target, this.dragStartPosition);
      s = s < r ? .5 * (s + r) : s
    }
    this.dragX = s, this.dragMoveTime = new Date, this.dispatchEvent("dragMove", t, [e, i])
  }, o.dragEnd = function(t, e) {
    this.options.freeScroll && (this.isFreeScrolling = !0);
    var i = this.dragEndRestingSelect();
    if (this.options.freeScroll && !this.options.wrapAround) {
      var n = this.getRestingPosition();
      this.isFreeScrolling = -n > this.slides[0].target && -n < this.getLastSlide().target
    } else this.options.freeScroll || i != this.selectedIndex || (i += this.dragEndBoostSelect());
    delete this.previousDragX, this.isDragSelect = this.options.wrapAround, this.select(i), delete this.isDragSelect, this.dispatchEvent("dragEnd", t, [e])
  }, o.dragEndRestingSelect = function() {
    var t = this.getRestingPosition(),
      e = Math.abs(this.getSlideDistance(-t, this.selectedIndex)),
      i = this._getClosestResting(t, e, 1),
      n = this._getClosestResting(t, e, -1),
      s = i.distance < n.distance ? i.index : n.index;
    return s
  }, o._getClosestResting = function(t, e, i) {
    for (var n = this.selectedIndex, s = 1 / 0, o = this.options.contain && !this.options.wrapAround ? function(t, e) {
        return t <= e
      } : function(t, e) {
        return t < e
      }; o(e, s) && (n += i, s = e, e = this.getSlideDistance(-t, n), null !== e);) e = Math.abs(e);
    return {
      distance: s,
      index: n - i
    }
  }, o.getSlideDistance = function(t, e) {
    var i = this.slides.length,
      s = this.options.wrapAround && i > 1,
      o = s ? n.modulo(e, i) : e,
      r = this.slides[o];
    if (!r) return null;
    var a = s ? this.slideableWidth * Math.floor(e / i) : 0;
    return t - (r.target + a)
  }, o.dragEndBoostSelect = function() {
    if (void 0 === this.previousDragX || !this.dragMoveTime || new Date - this.dragMoveTime > 100) return 0;
    var t = this.getSlideDistance(-this.dragX, this.selectedIndex),
      e = this.previousDragX - this.dragX;
    return t > 0 && e > 0 ? 1 : t < 0 && e < 0 ? -1 : 0
  }, o.staticClick = function(t, e) {
    var i = this.getParentCell(t.target),
      n = i && i.element,
      s = i && this.cells.indexOf(i);
    this.dispatchEvent("staticClick", t, [e, n, s])
  }, o.onscroll = function() {
    var t = s(),
      e = this.pointerDownScroll.x - t.x,
      i = this.pointerDownScroll.y - t.y;
    (Math.abs(e) > 3 || Math.abs(i) > 3) && this._pointerDone()
  }, e
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("tap-listener/tap-listener", ["unipointer/unipointer"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("unipointer")) : t.TapListener = e(t, t.Unipointer)
}(window, function(t, e) {
  function i(t) {
    this.bindTap(t)
  }
  var n = i.prototype = Object.create(e.prototype);
  return n.bindTap = function(t) {
    t && (this.unbindTap(), this.tapElement = t, this._bindStartEvent(t, !0))
  }, n.unbindTap = function() {
    this.tapElement && (this._bindStartEvent(this.tapElement, !0), delete this.tapElement)
  }, n.pointerUp = function(i, n) {
    if (!this.isIgnoringMouseUp || "mouseup" != i.type) {
      var s = e.getPointerPoint(n),
        o = this.tapElement.getBoundingClientRect(),
        r = t.pageXOffset,
        a = t.pageYOffset,
        l = s.x >= o.left + r && s.x <= o.right + r && s.y >= o.top + a && s.y <= o.bottom + a;
      if (l && this.emitEvent("tap", [i, n]), "mouseup" != i.type) {
        this.isIgnoringMouseUp = !0;
        var h = this;
        setTimeout(function() {
          delete h.isIgnoringMouseUp
        }, 400)
      }
    }
  }, n.destroy = function() {
    this.pointerDone(), this.unbindTap()
  }, i
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/prev-next-button", ["./flickity", "tap-listener/tap-listener", "fizzy-ui-utils/utils"], function(i, n, s) {
    return e(t, i, n, s)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("./flickity"), require("tap-listener"), require("fizzy-ui-utils")) : e(t, t.Flickity, t.TapListener, t.fizzyUIUtils)
}(window, function(t, e, i, n) {
  "use strict";

  function s(t, e) {
    this.direction = t, this.parent = e, this._create()
  }

  function o(t) {
    return "string" == typeof t ? t : "M " + t.x0 + ",50 L " + t.x1 + "," + (t.y1 + 50) + " L " + t.x2 + "," + (t.y2 + 50) + " L " + t.x3 + ",50  L " + t.x2 + "," + (50 - t.y2) + " L " + t.x1 + "," + (50 - t.y1) + " Z"
  }
  var r = "http://www.w3.org/2000/svg";
  s.prototype = new i, s.prototype._create = function() {
    this.isEnabled = !0, this.isPrevious = this.direction == -1;
    var t = this.parent.options.rightToLeft ? 1 : -1;
    this.isLeft = this.direction == t;
    var e = this.element = document.createElement("button");
    e.className = "flickity-prev-next-button", e.className += this.isPrevious ? " previous" : " next", e.setAttribute("type", "button"), this.disable(), e.setAttribute("aria-label", this.isPrevious ? "previous" : "next");
    var i = this.createSVG();
    e.appendChild(i), this.parent.on("select", function() {
      this.update()
    }.bind(this)), this.on("tap", this.onTap), this.on("pointerDown", function(t, e) {
      this.parent.childUIPointerDown(e)
    }.bind(this))
  }, s.prototype.activate = function() {
    this.bindTap(this.element), this.element.addEventListener("click", this), this.parent.element.appendChild(this.element)
  }, s.prototype.deactivate = function() {
    this.parent.element.removeChild(this.element), i.prototype.destroy.call(this), this.element.removeEventListener("click", this)
  }, s.prototype.createSVG = function() {
    var t = document.createElementNS(r, "svg");
    t.setAttribute("viewBox", "0 0 100 100");
    var e = document.createElementNS(r, "path"),
      i = o(this.parent.options.arrowShape);
    return e.setAttribute("d", i), e.setAttribute("class", "arrow"), this.isLeft || e.setAttribute("transform", "translate(100, 100) rotate(180) "), t.appendChild(e), t
  }, s.prototype.onTap = function() {
    if (this.isEnabled) {
      this.parent.uiChange();
      var t = this.isPrevious ? "previous" : "next";
      this.parent[t]()
    }
  }, s.prototype.handleEvent = n.handleEvent, s.prototype.onclick = function() {
    var t = document.activeElement;
    t && t == this.element && this.onTap()
  }, s.prototype.enable = function() {
    this.isEnabled || (this.element.disabled = !1, this.isEnabled = !0)
  }, s.prototype.disable = function() {
    this.isEnabled && (this.element.disabled = !0, this.isEnabled = !1)
  }, s.prototype.update = function() {
    var t = this.parent.slides;
    if (this.parent.options.wrapAround && t.length > 1) return void this.enable();
    var e = t.length ? t.length - 1 : 0,
      i = this.isPrevious ? 0 : e,
      n = this.parent.selectedIndex == i ? "disable" : "enable";
    this[n]()
  }, s.prototype.destroy = function() {
    this.deactivate()
  }, n.extend(e.defaults, {
    prevNextButtons: !0,
    arrowShape: {
      x0: 10,
      x1: 60,
      y1: 50,
      x2: 70,
      y2: 40,
      x3: 30
    }
  }), e.createMethods.push("_createPrevNextButtons");
  var a = e.prototype;
  return a._createPrevNextButtons = function() {
    this.options.prevNextButtons && (this.prevButton = new s((-1), this), this.nextButton = new s(1, this), this.on("activate", this.activatePrevNextButtons))
  }, a.activatePrevNextButtons = function() {
    this.prevButton.activate(), this.nextButton.activate(), this.on("deactivate", this.deactivatePrevNextButtons)
  }, a.deactivatePrevNextButtons = function() {
    this.prevButton.deactivate(), this.nextButton.deactivate(), this.off("deactivate", this.deactivatePrevNextButtons)
  }, e.PrevNextButton = s, e
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/page-dots", ["./flickity", "tap-listener/tap-listener", "fizzy-ui-utils/utils"], function(i, n, s) {
    return e(t, i, n, s)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("./flickity"), require("tap-listener"), require("fizzy-ui-utils")) : e(t, t.Flickity, t.TapListener, t.fizzyUIUtils)
}(window, function(t, e, i, n) {
  function s(t) {
    this.parent = t, this._create()
  }
  s.prototype = new i, s.prototype._create = function() {
    this.holder = document.createElement("ol"), this.holder.className = "flickity-page-dots", this.dots = [], this.on("tap", this.onTap)
  }, s.prototype.activate = function() {
    this.setDots(), this.bindTap(this.holder), this.parent.element.appendChild(this.holder)
  }, s.prototype.deactivate = function() {
    this.parent.element.removeChild(this.holder), i.prototype.destroy.call(this)
  }, s.prototype.setDots = function() {
    var t = this.parent.slides.length - this.dots.length;
    t > 0 ? this.addDots(t) : t < 0 && this.removeDots(-t)
  }, s.prototype.addDots = function(t) {
    for (var e = document.createDocumentFragment(), i = []; t;) {
      var n = document.createElement("li");
      n.className = "dot", e.appendChild(n), i.push(n), t--
    }
    this.holder.appendChild(e), this.dots = this.dots.concat(i)
  }, s.prototype.removeDots = function(t) {
    var e = this.dots.splice(this.dots.length - t, t);
    e.forEach(function(t) {
      this.holder.removeChild(t)
    }, this)
  }, s.prototype.updateSelected = function() {
    this.selectedDot && (this.selectedDot.className = "dot"), this.dots.length && (this.selectedDot = this.dots[this.parent.selectedIndex], this.selectedDot.className = "dot is-selected")
  }, s.prototype.onTap = function(t) {
    var e = t.target;
    if ("LI" == e.nodeName) {
      this.parent.uiChange();
      var i = this.dots.indexOf(e);
      this.parent.select(i)
    }
  }, s.prototype.destroy = function() {
    this.deactivate()
  }, e.PageDots = s, n.extend(e.defaults, {
    pageDots: !0
  }), e.createMethods.push("_createPageDots");
  var o = e.prototype;
  return o._createPageDots = function() {
    this.options.pageDots && (this.pageDots = new s(this), this.on("activate", this.activatePageDots), this.on("select", this.updateSelectedPageDots), this.on("cellChange", this.updatePageDots), this.on("resize", this.updatePageDots), this.on("deactivate", this.deactivatePageDots), this.pageDots.on("pointerDown", function(t) {
      this.childUIPointerDown(t)
    }.bind(this)))
  }, o.activatePageDots = function() {
    this.pageDots.activate()
  }, o.updateSelectedPageDots = function() {
    this.pageDots.updateSelected()
  }, o.updatePageDots = function() {
    this.pageDots.setDots()
  }, o.deactivatePageDots = function() {
    this.pageDots.deactivate()
  }, e.PageDots = s, e
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/player", ["ev-emitter/ev-emitter", "fizzy-ui-utils/utils", "./flickity"], function(t, i, n) {
    return e(t, i, n)
  }) : "object" == typeof module && module.exports ? module.exports = e(require("ev-emitter"), require("fizzy-ui-utils"), require("./flickity")) : e(t.EvEmitter, t.fizzyUIUtils, t.Flickity)
}(window, function(t, e, i) {
  function n(t) {
    this.parent = t, this.state = "stopped", o && (this.onVisibilityChange = function() {
      this.visibilityChange()
    }.bind(this), this.onVisibilityPlay = function() {
      this.visibilityPlay()
    }.bind(this))
  }
  var s, o;
  "hidden" in document ? (s = "hidden", o = "visibilitychange") : "webkitHidden" in document && (s = "webkitHidden", o = "webkitvisibilitychange"), n.prototype = Object.create(t.prototype), n.prototype.play = function() {
    if ("playing" != this.state) {
      var t = document[s];
      if (o && t) return void document.addEventListener(o, this.onVisibilityPlay);
      this.state = "playing", o && document.addEventListener(o, this.onVisibilityChange), this.tick()
    }
  }, n.prototype.tick = function() {
    if ("playing" == this.state) {
      var t = this.parent.options.autoPlay;
      t = "number" == typeof t ? t : 3e3;
      var e = this;
      this.clear(), this.timeout = setTimeout(function() {
        e.parent.next(!0), e.tick()
      }, t)
    }
  }, n.prototype.stop = function() {
    this.state = "stopped", this.clear(), o && document.removeEventListener(o, this.onVisibilityChange)
  }, n.prototype.clear = function() {
    clearTimeout(this.timeout)
  }, n.prototype.pause = function() {
    "playing" == this.state && (this.state = "paused", this.clear())
  }, n.prototype.unpause = function() {
    "paused" == this.state && this.play()
  }, n.prototype.visibilityChange = function() {
    var t = document[s];
    this[t ? "pause" : "unpause"]()
  }, n.prototype.visibilityPlay = function() {
    this.play(), document.removeEventListener(o, this.onVisibilityPlay)
  }, e.extend(i.defaults, {
    pauseAutoPlayOnHover: !0
  }), i.createMethods.push("_createPlayer");
  var r = i.prototype;
  return r._createPlayer = function() {
    this.player = new n(this), this.on("activate", this.activatePlayer), this.on("uiChange", this.stopPlayer), this.on("pointerDown", this.stopPlayer), this.on("deactivate", this.deactivatePlayer)
  }, r.activatePlayer = function() {
    this.options.autoPlay && (this.player.play(), this.element.addEventListener("mouseenter", this))
  }, r.playPlayer = function() {
    this.player.play()
  }, r.stopPlayer = function() {
    this.player.stop()
  }, r.pausePlayer = function() {
    this.player.pause()
  }, r.unpausePlayer = function() {
    this.player.unpause()
  }, r.deactivatePlayer = function() {
    this.player.stop(), this.element.removeEventListener("mouseenter", this)
  }, r.onmouseenter = function() {
    this.options.pauseAutoPlayOnHover && (this.player.pause(), this.element.addEventListener("mouseleave", this))
  }, r.onmouseleave = function() {
    this.player.unpause(), this.element.removeEventListener("mouseleave", this)
  }, i.Player = n, i
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/add-remove-cell", ["./flickity", "fizzy-ui-utils/utils"], function(i, n) {
    return e(t, i, n)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("./flickity"), require("fizzy-ui-utils")) : e(t, t.Flickity, t.fizzyUIUtils)
}(window, function(t, e, i) {
  function n(t) {
    var e = document.createDocumentFragment();
    return t.forEach(function(t) {
      e.appendChild(t.element)
    }), e
  }
  var s = e.prototype;
  return s.insert = function(t, e) {
    var i = this._makeCells(t);
    if (i && i.length) {
      var s = this.cells.length;
      e = void 0 === e ? s : e;
      var o = n(i),
        r = e == s;
      if (r) this.slider.appendChild(o);
      else {
        var a = this.cells[e].element;
        this.slider.insertBefore(o, a)
      }
      if (0 === e) this.cells = i.concat(this.cells);
      else if (r) this.cells = this.cells.concat(i);
      else {
        var l = this.cells.splice(e, s - e);
        this.cells = this.cells.concat(i).concat(l)
      }
      this._sizeCells(i);
      var h = e > this.selectedIndex ? 0 : i.length;
      this._cellAddedRemoved(e, h)
    }
  }, s.append = function(t) {
    this.insert(t, this.cells.length)
  }, s.prepend = function(t) {
    this.insert(t, 0)
  }, s.remove = function(t) {
    var e, n, s = this.getCells(t),
      o = 0,
      r = s.length;
    for (e = 0; e < r; e++) {
      n = s[e];
      var a = this.cells.indexOf(n) < this.selectedIndex;
      o -= a ? 1 : 0
    }
    for (e = 0; e < r; e++) n = s[e], n.remove(), i.removeFrom(this.cells, n);
    s.length && this._cellAddedRemoved(0, o)
  }, s._cellAddedRemoved = function(t, e) {
    e = e || 0, this.selectedIndex += e, this.selectedIndex = Math.max(0, Math.min(this.slides.length - 1, this.selectedIndex)), this.cellChange(t, !0), this.emitEvent("cellAddedRemoved", [t, e])
  }, s.cellSizeChange = function(t) {
    var e = this.getCell(t);
    if (e) {
      e.getSize();
      var i = this.cells.indexOf(e);
      this.cellChange(i)
    }
  }, s.cellChange = function(t, e) {
    var i = this.slideableWidth;
    if (this._positionCells(t), this._getWrapShiftCells(), this.setGallerySize(), this.emitEvent("cellChange", [t]), this.options.freeScroll) {
      var n = i - this.slideableWidth;
      this.x += n * this.cellAlign, this.positionSlider()
    } else e && this.positionSliderAtSelected(), this.select(this.selectedIndex)
  }, e
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/lazyload", ["./flickity", "fizzy-ui-utils/utils"], function(i, n) {
    return e(t, i, n)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("./flickity"), require("fizzy-ui-utils")) : e(t, t.Flickity, t.fizzyUIUtils)
}(window, function(t, e, i) {
  "use strict";

  function n(t) {
    if ("IMG" == t.nodeName && t.getAttribute("data-flickity-lazyload")) return [t];
    var e = t.querySelectorAll("img[data-flickity-lazyload]");
    return i.makeArray(e)
  }

  function s(t, e) {
    this.img = t, this.flickity = e, this.load()
  }
  e.createMethods.push("_createLazyload");
  var o = e.prototype;
  return o._createLazyload = function() {
    this.on("select", this.lazyLoad)
  }, o.lazyLoad = function() {
    var t = this.options.lazyLoad;
    if (t) {
      var e = "number" == typeof t ? t : 0,
        i = this.getAdjacentCellElements(e),
        o = [];
      i.forEach(function(t) {
        var e = n(t);
        o = o.concat(e)
      }), o.forEach(function(t) {
        new s(t, this)
      }, this)
    }
  }, s.prototype.handleEvent = i.handleEvent, s.prototype.load = function() {
    this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.img.getAttribute("data-flickity-lazyload"), this.img.removeAttribute("data-flickity-lazyload")
  }, s.prototype.onload = function(t) {
    this.complete(t, "flickity-lazyloaded")
  }, s.prototype.onerror = function(t) {
    this.complete(t, "flickity-lazyerror")
  }, s.prototype.complete = function(t, e) {
    this.img.removeEventListener("load", this), this.img.removeEventListener("error", this);
    var i = this.flickity.getParentCell(this.img),
      n = i && i.element;
    this.flickity.cellSizeChange(n), this.img.classList.add(e), this.flickity.dispatchEvent("lazyLoad", t, n)
  }, e.LazyLoader = s, e
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity/js/index", ["./flickity", "./drag", "./prev-next-button", "./page-dots", "./player", "./add-remove-cell", "./lazyload"], e) : "object" == typeof module && module.exports && (module.exports = e(require("./flickity"), require("./drag"), require("./prev-next-button"), require("./page-dots"), require("./player"), require("./add-remove-cell"), require("./lazyload")))
}(window, function(t) {
  return t
}),
function(t, e) {
  "function" == typeof define && define.amd ? define("flickity-as-nav-for/as-nav-for", ["flickity/js/index", "fizzy-ui-utils/utils"], e) : "object" == typeof module && module.exports ? module.exports = e(require("flickity"), require("fizzy-ui-utils")) : t.Flickity = e(t.Flickity, t.fizzyUIUtils)
}(window, function(t, e) {
  function i(t, e, i) {
    return (e - t) * i + t
  }
  t.createMethods.push("_createAsNavFor");
  var n = t.prototype;
  return n._createAsNavFor = function() {
    this.on("activate", this.activateAsNavFor), this.on("deactivate", this.deactivateAsNavFor), this.on("destroy", this.destroyAsNavFor);
    var t = this.options.asNavFor;
    if (t) {
      var e = this;
      setTimeout(function() {
        e.setNavCompanion(t)
      })
    }
  }, n.setNavCompanion = function(i) {
    i = e.getQueryElement(i);
    var n = t.data(i);
    if (n && n != this) {
      this.navCompanion = n;
      var s = this;
      this.onNavCompanionSelect = function() {
        s.navCompanionSelect()
      }, n.on("select", this.onNavCompanionSelect), this.on("staticClick", this.onNavStaticClick), this.navCompanionSelect(!0)
    }
  }, n.navCompanionSelect = function(t) {
    if (this.navCompanion) {
      var e = this.navCompanion.selectedCells[0],
        n = this.navCompanion.cells.indexOf(e),
        s = n + this.navCompanion.selectedCells.length - 1,
        o = Math.floor(i(n, s, this.navCompanion.cellAlign));
      if (this.selectCell(o, !1, t), this.removeNavSelectedElements(), !(o >= this.cells.length)) {
        var r = this.cells.slice(n, s + 1);
        this.navSelectedElements = r.map(function(t) {
          return t.element
        }), this.changeNavSelectedClass("add")
      }
    }
  }, n.changeNavSelectedClass = function(t) {
    this.navSelectedElements.forEach(function(e) {
      e.classList[t]("is-nav-selected")
    })
  }, n.activateAsNavFor = function() {
    this.navCompanionSelect(!0)
  }, n.removeNavSelectedElements = function() {
    this.navSelectedElements && (this.changeNavSelectedClass("remove"), delete this.navSelectedElements)
  }, n.onNavStaticClick = function(t, e, i, n) {
    "number" == typeof n && this.navCompanion.selectCell(n)
  }, n.deactivateAsNavFor = function() {
    this.removeNavSelectedElements()
  }, n.destroyAsNavFor = function() {
    this.navCompanion && (this.navCompanion.off("select", this.onNavCompanionSelect), this.off("staticClick", this.onNavStaticClick), delete this.navCompanion)
  }, t
}),
function(t, e) {
  "use strict";
  "function" == typeof define && define.amd ? define("imagesloaded/imagesloaded", ["ev-emitter/ev-emitter"], function(i) {
    return e(t, i)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("ev-emitter")) : t.imagesLoaded = e(t, t.EvEmitter)
}(window, function(t, e) {
  function i(t, e) {
    for (var i in e) t[i] = e[i];
    return t
  }

  function n(t) {
    var e = [];
    if (Array.isArray(t)) e = t;
    else if ("number" == typeof t.length)
      for (var i = 0; i < t.length; i++) e.push(t[i]);
    else e.push(t);
    return e
  }

  function s(t, e, o) {
    return this instanceof s ? ("string" == typeof t && (t = document.querySelectorAll(t)), this.elements = n(t), this.options = i({}, this.options), "function" == typeof e ? o = e : i(this.options, e), o && this.on("always", o), this.getImages(), a && (this.jqDeferred = new a.Deferred), void setTimeout(function() {
      this.check()
    }.bind(this))) : new s(t, e, o)
  }

  function o(t) {
    this.img = t
  }

  function r(t, e) {
    this.url = t, this.element = e, this.img = new Image
  }
  var a = t.jQuery,
    l = t.console;
  s.prototype = Object.create(e.prototype), s.prototype.options = {}, s.prototype.getImages = function() {
    this.images = [], this.elements.forEach(this.addElementImages, this)
  }, s.prototype.addElementImages = function(t) {
    "IMG" == t.nodeName && this.addImage(t), this.options.background === !0 && this.addElementBackgroundImages(t);
    var e = t.nodeType;
    if (e && h[e]) {
      for (var i = t.querySelectorAll("img"), n = 0; n < i.length; n++) {
        var s = i[n];
        this.addImage(s)
      }
      if ("string" == typeof this.options.background) {
        var o = t.querySelectorAll(this.options.background);
        for (n = 0; n < o.length; n++) {
          var r = o[n];
          this.addElementBackgroundImages(r)
        }
      }
    }
  };
  var h = {
    1: !0,
    9: !0,
    11: !0
  };
  return s.prototype.addElementBackgroundImages = function(t) {
    var e = getComputedStyle(t);
    if (e)
      for (var i = /url\((['"])?(.*?)\1\)/gi, n = i.exec(e.backgroundImage); null !== n;) {
        var s = n && n[2];
        s && this.addBackground(s, t), n = i.exec(e.backgroundImage)
      }
  }, s.prototype.addImage = function(t) {
    var e = new o(t);
    this.images.push(e)
  }, s.prototype.addBackground = function(t, e) {
    var i = new r(t, e);
    this.images.push(i)
  }, s.prototype.check = function() {
    function t(t, i, n) {
      setTimeout(function() {
        e.progress(t, i, n)
      })
    }
    var e = this;
    return this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? void this.images.forEach(function(e) {
      e.once("progress", t), e.check()
    }) : void this.complete()
  }, s.prototype.progress = function(t, e, i) {
    this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded, this.emitEvent("progress", [this, t, e]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, t), this.progressedCount == this.images.length && this.complete(), this.options.debug && l && l.log("progress: " + i, t, e)
  }, s.prototype.complete = function() {
    var t = this.hasAnyBroken ? "fail" : "done";
    if (this.isComplete = !0, this.emitEvent(t, [this]), this.emitEvent("always", [this]), this.jqDeferred) {
      var e = this.hasAnyBroken ? "reject" : "resolve";
      this.jqDeferred[e](this)
    }
  }, o.prototype = Object.create(e.prototype), o.prototype.check = function() {
    var t = this.getIsImageComplete();
    return t ? void this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image, this.proxyImage.addEventListener("load", this), this.proxyImage.addEventListener("error", this), this.img.addEventListener("load", this), this.img.addEventListener("error", this), void(this.proxyImage.src = this.img.src))
  }, o.prototype.getIsImageComplete = function() {
    return this.img.complete && void 0 !== this.img.naturalWidth
  }, o.prototype.confirm = function(t, e) {
    this.isLoaded = t, this.emitEvent("progress", [this, this.img, e])
  }, o.prototype.handleEvent = function(t) {
    var e = "on" + t.type;
    this[e] && this[e](t)
  }, o.prototype.onload = function() {
    this.confirm(!0, "onload"), this.unbindEvents()
  }, o.prototype.onerror = function() {
    this.confirm(!1, "onerror"), this.unbindEvents()
  }, o.prototype.unbindEvents = function() {
    this.proxyImage.removeEventListener("load", this), this.proxyImage.removeEventListener("error", this), this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
  }, r.prototype = Object.create(o.prototype), r.prototype.check = function() {
    this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.url;
    var t = this.getIsImageComplete();
    t && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"), this.unbindEvents())
  }, r.prototype.unbindEvents = function() {
    this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
  }, r.prototype.confirm = function(t, e) {
    this.isLoaded = t, this.emitEvent("progress", [this, this.element, e])
  }, s.makeJQueryPlugin = function(e) {
    e = e || t.jQuery, e && (a = e, a.fn.imagesLoaded = function(t, e) {
      var i = new s(this, t, e);
      return i.jqDeferred.promise(a(this))
    })
  }, s.makeJQueryPlugin(), s
}),
function(t, e) {
  "function" == typeof define && define.amd ? define(["flickity/js/index", "imagesloaded/imagesloaded"], function(i, n) {
    return e(t, i, n)
  }) : "object" == typeof module && module.exports ? module.exports = e(t, require("flickity"), require("imagesloaded")) : t.Flickity = e(t, t.Flickity, t.imagesLoaded)
}(window, function(t, e, i) {
  "use strict";
  e.createMethods.push("_createImagesLoaded");
  var n = e.prototype;
  return n._createImagesLoaded = function() {
    this.on("activate", this.imagesLoaded)
  }, n.imagesLoaded = function() {
    function t(t, i) {
      var n = e.getParentCell(i.img);
      e.cellSizeChange(n && n.element), e.options.freeScroll || e.positionSliderAtSelected()
    }
    if (this.options.imagesLoaded) {
      var e = this;
      i(this.slider).on("progress", t)
    }
  }, e
});
